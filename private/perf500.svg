<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>Page::Page(this=0x7fffc121a000) (1 samples, 0.13%)</title><rect x="1185.5" y="389" width="1.5" height="15.0" fill="rgb(236,22,12)" rx="2" ry="2" />
<text  x="1188.49" y="399.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="445.9" y="229" width="1.5" height="15.0" fill="rgb(232,102,22)" rx="2" ry="2" />
<text  x="448.92" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="857.8" y="229" width="1.5" height="15.0" fill="rgb(252,141,39)" rx="2" ry="2" />
<text  x="860.80" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="839.8" y="261" width="1.5" height="15.0" fill="rgb(239,78,44)" rx="2" ry="2" />
<text  x="842.76" y="271.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="859.3" y="229" width="1.5" height="15.0" fill="rgb(219,227,54)" rx="2" ry="2" />
<text  x="862.30" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6c8d28c50, (1 samples, 0.13%)</title><rect x="740.5" y="261" width="1.6" height="15.0" fill="rgb(239,41,15)" rx="2" ry="2" />
<text  x="743.55" y="271.5" ></text>
</g>
<g >
<title>PageId::operator== (2 samples, 0.25%)</title><rect x="829.2" y="229" width="3.0" height="15.0" fill="rgb(254,49,5)" rx="2" ry="2" />
<text  x="832.24" y="239.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f6e6fd90, (3 samples, 0.38%)</title><rect x="687.9" y="229" width="4.5" height="15.0" fill="rgb(252,60,9)" rx="2" ry="2" />
<text  x="690.94" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a872555187&quot;, (1 samples, 0.13%)</title><rect x="678.9" y="213" width="1.5" height="15.0" fill="rgb(253,36,25)" rx="2" ry="2" />
<text  x="681.92" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=48) (1 samples, 0.13%)</title><rect x="47.6" y="197" width="1.5" height="15.0" fill="rgb(238,103,12)" rx="2" ry="2" />
<text  x="50.58" y="207.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator()(this=0x7fffc681cdf8, (1 samples, 0.13%)</title><rect x="25.0" y="229" width="1.5" height="15.0" fill="rgb(231,165,27)" rx="2" ry="2" />
<text  x="28.03" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="366.3" y="293" width="1.5" height="15.0" fill="rgb(214,91,1)" rx="2" ry="2" />
<text  x="369.25" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.51%)</title><rect x="845.8" y="277" width="6.0" height="15.0" fill="rgb(216,217,13)" rx="2" ry="2" />
<text  x="848.77" y="287.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f4e2fd90, (1 samples, 0.13%)</title><rect x="672.9" y="229" width="1.5" height="15.0" fill="rgb(229,11,28)" rx="2" ry="2" />
<text  x="675.90" y="239.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="16.0" y="229" width="1.5" height="15.0" fill="rgb(209,64,37)" rx="2" ry="2" />
<text  x="19.01" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d8efa030 (1 samples, 0.13%)</title><rect x="678.9" y="197" width="1.5" height="15.0" fill="rgb(208,206,3)" rx="2" ry="2" />
<text  x="681.92" y="207.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fe6d0000020) (1 samples, 0.13%)</title><rect x="860.8" y="213" width="1.5" height="15.0" fill="rgb(211,63,16)" rx="2" ry="2" />
<text  x="863.80" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="433.9" y="149" width="1.5" height="15.0" fill="rgb(254,1,11)" rx="2" ry="2" />
<text  x="436.90" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (46 samples, 5.86%)</title><rect x="367.8" y="309" width="69.1" height="15.0" fill="rgb(238,140,42)" rx="2" ry="2" />
<text  x="370.76" y="319.5" >std::_H..</text>
</g>
<g >
<title>std::__detail::_ReuseOrAllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (36 samples, 4.59%)</title><rect x="382.8" y="229" width="54.1" height="15.0" fill="rgb(223,179,40)" rx="2" ry="2" />
<text  x="385.79" y="239.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.13%)</title><rect x="1188.5" y="469" width="1.5" height="15.0" fill="rgb(216,41,39)" rx="2" ry="2" />
<text  x="1191.50" y="479.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork(this=0x7fffc681d310, (207 samples, 26.37%)</title><rect x="868.3" y="469" width="311.2" height="15.0" fill="rgb(231,22,29)" rx="2" ry="2" />
<text  x="871.32" y="479.5" >MultiThreadedPageRankComputer::computeFor..</text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt;() (1 samples, 0.13%)</title><rect x="461.0" y="293" width="1.5" height="15.0" fill="rgb(223,226,49)" rx="2" ry="2" />
<text  x="463.96" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (8 samples, 1.02%)</title><rect x="736.0" y="309" width="12.1" height="15.0" fill="rgb(239,157,36)" rx="2" ry="2" />
<text  x="739.04" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait (3 samples, 0.38%)</title><rect x="494.0" y="277" width="4.5" height="15.0" fill="rgb(223,124,49)" rx="2" ry="2" />
<text  x="497.03" y="287.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="14.5" y="213" width="1.5" height="15.0" fill="rgb(224,103,6)" rx="2" ry="2" />
<text  x="17.51" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="400.8" y="149" width="1.5" height="15.0" fill="rgb(226,23,50)" rx="2" ry="2" />
<text  x="403.83" y="159.5" ></text>
</g>
<g >
<title>Page::getId(this=0x7fe6c8a5e900) (1 samples, 0.13%)</title><rect x="444.4" y="341" width="1.5" height="15.0" fill="rgb(223,24,51)" rx="2" ry="2" />
<text  x="447.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, (1 samples, 0.13%)</title><rect x="839.8" y="245" width="1.5" height="15.0" fill="rgb(232,37,35)" rx="2" ry="2" />
<text  x="842.76" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageIdAndRankconst*, (1 samples, 0.13%)</title><rect x="868.3" y="389" width="1.5" height="15.0" fill="rgb(209,152,46)" rx="2" ry="2" />
<text  x="871.32" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="722.5" y="261" width="1.5" height="15.0" fill="rgb(252,61,1)" rx="2" ry="2" />
<text  x="725.51" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="25.0" y="181" width="1.5" height="15.0" fill="rgb(211,64,11)" rx="2" ry="2" />
<text  x="28.03" y="191.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="47.6" y="165" width="1.5" height="15.0" fill="rgb(228,122,16)" rx="2" ry="2" />
<text  x="50.58" y="175.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.13%)</title><rect x="862.3" y="213" width="1.5" height="15.0" fill="rgb(252,227,26)" rx="2" ry="2" />
<text  x="865.31" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;PageIdconst, (3 samples, 0.38%)</title><rect x="824.7" y="245" width="4.5" height="15.0" fill="rgb(226,25,49)" rx="2" ry="2" />
<text  x="827.73" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="857.8" y="261" width="1.5" height="15.0" fill="rgb(206,38,18)" rx="2" ry="2" />
<text  x="860.80" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="872.8" y="389" width="1.5" height="15.0" fill="rgb(218,94,52)" rx="2" ry="2" />
<text  x="875.83" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="445.9" y="309" width="1.5" height="15.0" fill="rgb(219,63,24)" rx="2" ry="2" />
<text  x="448.92" y="319.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6c0000020, (1 samples, 0.13%)</title><rect x="385.8" y="85" width="1.5" height="15.0" fill="rgb(207,14,2)" rx="2" ry="2" />
<text  x="388.80" y="95.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (3 samples, 0.38%)</title><rect x="869.8" y="437" width="4.5" height="15.0" fill="rgb(207,16,38)" rx="2" ry="2" />
<text  x="872.82" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.51%)</title><rect x="874.3" y="421" width="6.0" height="15.0" fill="rgb(248,80,54)" rx="2" ry="2" />
<text  x="877.33" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="884.9" y="357" width="1.5" height="15.0" fill="rgb(251,80,44)" rx="2" ry="2" />
<text  x="887.85" y="367.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="715.0" y="229" width="1.5" height="15.0" fill="rgb(250,34,6)" rx="2" ry="2" />
<text  x="717.99" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="872.8" y="325" width="1.5" height="15.0" fill="rgb(252,8,42)" rx="2" ry="2" />
<text  x="875.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="399.3" y="149" width="1.5" height="15.0" fill="rgb(230,221,8)" rx="2" ry="2" />
<text  x="402.32" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d4da0100 (1 samples, 0.13%)</title><rect x="690.9" y="197" width="1.5" height="15.0" fill="rgb(223,206,35)" rx="2" ry="2" />
<text  x="693.94" y="207.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="445.9" y="261" width="1.5" height="15.0" fill="rgb(221,59,33)" rx="2" ry="2" />
<text  x="448.92" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt;(__first=0x7fe6ca684fd0, (1 samples, 0.13%)</title><rect x="887.9" y="405" width="1.5" height="15.0" fill="rgb(237,109,34)" rx="2" ry="2" />
<text  x="890.86" y="415.5" ></text>
</g>
<g >
<title>NetworkGenerator::generatePageFromNum(this=0x7fffc681d300, (1 samples, 0.13%)</title><rect x="1187.0" y="453" width="1.5" height="15.0" fill="rgb(211,13,29)" rx="2" ry="2" />
<text  x="1189.99" y="463.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="884.9" y="309" width="1.5" height="15.0" fill="rgb(232,183,32)" rx="2" ry="2" />
<text  x="887.85" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f665fdb0) (1 samples, 0.13%)</title><rect x="444.4" y="325" width="1.5" height="15.0" fill="rgb(215,63,34)" rx="2" ry="2" />
<text  x="447.42" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="841.3" y="293" width="1.5" height="15.0" fill="rgb(207,226,17)" rx="2" ry="2" />
<text  x="844.26" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt;&gt;::deallocate (3 samples, 0.38%)</title><rect x="874.3" y="357" width="4.5" height="15.0" fill="rgb(214,209,33)" rx="2" ry="2" />
<text  x="877.33" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725464954&quot;, (1 samples, 0.13%)</title><rect x="695.5" y="213" width="1.5" height="15.0" fill="rgb(249,111,54)" rx="2" ry="2" />
<text  x="698.45" y="223.5" ></text>
</g>
<g >
<title>Page::Page(this=0x7fe6d0004eb0) (1 samples, 0.13%)</title><rect x="865.3" y="277" width="1.5" height="15.0" fill="rgb(230,17,21)" rx="2" ry="2" />
<text  x="868.31" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6954bc928) (1 samples, 0.13%)</title><rect x="396.3" y="165" width="1.5" height="15.0" fill="rgb(236,188,1)" rx="2" ry="2" />
<text  x="399.32" y="175.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (208 samples, 26.50%)</title><rect x="53.6" y="261" width="312.7" height="15.0" fill="rgb(221,42,13)" rx="2" ry="2" />
<text  x="56.59" y="271.5" >futex_wait_cancelable</text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6dca19990, (1 samples, 0.13%)</title><rect x="745.1" y="261" width="1.5" height="15.0" fill="rgb(206,21,0)" rx="2" ry="2" />
<text  x="748.06" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (7 samples, 0.89%)</title><rect x="17.5" y="309" width="10.5" height="15.0" fill="rgb(231,181,6)" rx="2" ry="2" />
<text  x="20.52" y="319.5" ></text>
</g>
<g >
<title>std::abs(__x=1.3716878059628576e-09) (1 samples, 0.13%)</title><rect x="471.5" y="341" width="1.5" height="15.0" fill="rgb(254,156,33)" rx="2" ry="2" />
<text  x="474.48" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="47.6" y="245" width="1.5" height="15.0" fill="rgb(237,118,54)" rx="2" ry="2" />
<text  x="50.58" y="255.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6c8000020, (1 samples, 0.13%)</title><rect x="886.4" y="341" width="1.5" height="15.0" fill="rgb(240,107,43)" rx="2" ry="2" />
<text  x="889.36" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="1187.0" y="421" width="1.5" height="15.0" fill="rgb(253,114,42)" rx="2" ry="2" />
<text  x="1189.99" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6c2cdf680, (1 samples, 0.13%)</title><rect x="704.5" y="261" width="1.5" height="15.0" fill="rgb(229,191,48)" rx="2" ry="2" />
<text  x="707.47" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::construct&lt;PageIdAndRank,PageIdAndRank&gt; (1 samples, 0.13%)</title><rect x="436.9" y="277" width="1.5" height="15.0" fill="rgb(247,175,49)" rx="2" ry="2" />
<text  x="439.90" y="287.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6f5e4fd10, (7 samples, 0.89%)</title><rect x="498.5" y="341" width="10.6" height="15.0" fill="rgb(210,69,0)" rx="2" ry="2" />
<text  x="501.54" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (2 samples, 0.25%)</title><rect x="869.8" y="373" width="3.0" height="15.0" fill="rgb(232,60,19)" rx="2" ry="2" />
<text  x="872.82" y="383.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (3 samples, 0.38%)</title><rect x="494.0" y="325" width="4.5" height="15.0" fill="rgb(253,73,30)" rx="2" ry="2" />
<text  x="497.03" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (5 samples, 0.64%)</title><rect x="41.6" y="293" width="7.5" height="15.0" fill="rgb(240,174,48)" rx="2" ry="2" />
<text  x="44.57" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (36 samples, 4.59%)</title><rect x="382.8" y="261" width="54.1" height="15.0" fill="rgb(216,145,8)" rx="2" ry="2" />
<text  x="385.79" y="271.5" >std::..</text>
</g>
<g >
<title>MultiThreadedPageRankComputer::WorkerData::~WorkerData(this=0x7fffc681cde0, (14 samples, 1.78%)</title><rect x="869.8" y="453" width="21.1" height="15.0" fill="rgb(209,107,34)" rx="2" ry="2" />
<text  x="872.82" y="463.5" ></text>
</g>
<g >
<title>all (785 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(218,67,37)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f5e4fc80) (1 samples, 0.13%)</title><rect x="16.0" y="309" width="1.5" height="15.0" fill="rgb(244,66,14)" rx="2" ry="2" />
<text  x="19.01" y="319.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="16.0" y="197" width="1.5" height="15.0" fill="rgb(232,228,7)" rx="2" ry="2" />
<text  x="19.01" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId,std::pair&lt;PageId (22 samples, 2.80%)</title><rect x="663.9" y="261" width="33.1" height="15.0" fill="rgb(244,91,14)" rx="2" ry="2" />
<text  x="666.89" y="271.5" >st..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (7 samples, 0.89%)</title><rect x="701.5" y="309" width="10.5" height="15.0" fill="rgb(211,82,29)" rx="2" ry="2" />
<text  x="704.46" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::WorkerData::wait(this=0x7fffc681cde0) (258 samples, 32.87%)</title><rect x="50.6" y="341" width="387.8" height="15.0" fill="rgb(229,63,31)" rx="2" ry="2" />
<text  x="53.59" y="351.5" >MultiThreadedPageRankComputer::WorkerData::wait(this..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="412.9" y="133" width="1.5" height="15.0" fill="rgb(240,150,25)" rx="2" ry="2" />
<text  x="415.85" y="143.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="445.9" y="213" width="1.5" height="15.0" fill="rgb(247,106,14)" rx="2" ry="2" />
<text  x="448.92" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6efaa0d98) (1 samples, 0.13%)</title><rect x="432.4" y="165" width="1.5" height="15.0" fill="rgb(251,5,6)" rx="2" ry="2" />
<text  x="435.39" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId,std::pair&lt;PageId (21 samples, 2.68%)</title><rect x="809.7" y="277" width="31.6" height="15.0" fill="rgb(233,84,41)" rx="2" ry="2" />
<text  x="812.69" y="287.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (57 samples, 7.26%)</title><rect x="755.6" y="293" width="85.7" height="15.0" fill="rgb(235,135,37)" rx="2" ry="2" />
<text  x="758.58" y="303.5" >std::_Hash..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="866.8" y="261" width="1.5" height="15.0" fill="rgb(228,110,11)" rx="2" ry="2" />
<text  x="869.82" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (2 samples, 0.25%)</title><rect x="38.6" y="293" width="3.0" height="15.0" fill="rgb(252,83,37)" rx="2" ry="2" />
<text  x="41.56" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="889.4" y="421" width="1.5" height="15.0" fill="rgb(246,33,25)" rx="2" ry="2" />
<text  x="892.36" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (3 samples, 0.38%)</title><rect x="494.0" y="309" width="4.5" height="15.0" fill="rgb(209,143,54)" rx="2" ry="2" />
<text  x="497.03" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (1 samples, 0.13%)</title><rect x="880.3" y="389" width="1.5" height="15.0" fill="rgb(254,11,11)" rx="2" ry="2" />
<text  x="883.34" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;Page*,Page*, (1 samples, 0.13%)</title><rect x="1188.5" y="453" width="1.5" height="15.0" fill="rgb(217,181,29)" rx="2" ry="2" />
<text  x="1191.50" y="463.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::WorkerData::work(this=0x7fffc681cde0, (571 samples, 72.74%)</title><rect x="10.0" y="357" width="858.3" height="15.0" fill="rgb(208,43,41)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >MultiThreadedPageRankComputer::WorkerData::work(this=0x7fffc681cde0,</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="13.0" y="293" width="1.5" height="15.0" fill="rgb(239,171,45)" rx="2" ry="2" />
<text  x="16.01" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="678.9" y="181" width="1.5" height="15.0" fill="rgb(241,18,21)" rx="2" ry="2" />
<text  x="681.92" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6d8efa030, (1 samples, 0.13%)</title><rect x="707.5" y="261" width="1.5" height="15.0" fill="rgb(220,43,48)" rx="2" ry="2" />
<text  x="710.48" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="683.4" y="181" width="1.5" height="15.0" fill="rgb(208,150,27)" rx="2" ry="2" />
<text  x="686.43" y="191.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank(this=0x7fe6ad5d3240) (1 samples, 0.13%)</title><rect x="436.9" y="261" width="1.5" height="15.0" fill="rgb(241,190,52)" rx="2" ry="2" />
<text  x="439.90" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fffc003ae10) (1 samples, 0.13%)</title><rect x="1184.0" y="373" width="1.5" height="15.0" fill="rgb(232,198,19)" rx="2" ry="2" />
<text  x="1186.99" y="383.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.13%)</title><rect x="456.4" y="277" width="1.5" height="15.0" fill="rgb(210,229,47)" rx="2" ry="2" />
<text  x="459.45" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="16.0" y="277" width="1.5" height="15.0" fill="rgb(229,145,7)" rx="2" ry="2" />
<text  x="19.01" y="287.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank(this=0x7fe6fa68fc70, (2 samples, 0.25%)</title><rect x="50.6" y="325" width="3.0" height="15.0" fill="rgb(225,202,4)" rx="2" ry="2" />
<text  x="53.59" y="335.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (208 samples, 26.50%)</title><rect x="53.6" y="277" width="312.7" height="15.0" fill="rgb(230,180,9)" rx="2" ry="2" />
<text  x="56.59" y="287.5" >__pthread_cond_wait_common</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="28.0" y="309" width="1.5" height="15.0" fill="rgb(212,67,0)" rx="2" ry="2" />
<text  x="31.04" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.13%)</title><rect x="1184.0" y="357" width="1.5" height="15.0" fill="rgb(234,38,34)" rx="2" ry="2" />
<text  x="1186.99" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (3 samples, 0.38%)</title><rect x="494.0" y="293" width="4.5" height="15.0" fill="rgb(205,99,30)" rx="2" ry="2" />
<text  x="497.03" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6bf5ef3e8) (1 samples, 0.13%)</title><rect x="408.3" y="165" width="1.5" height="15.0" fill="rgb(249,92,26)" rx="2" ry="2" />
<text  x="411.34" y="175.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="509.1" y="325" width="15.0" height="15.0" fill="rgb(234,7,17)" rx="2" ry="2" />
<text  x="512.06" y="335.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageIdAndRank,PageIdAndRank (1 samples, 0.13%)</title><rect x="868.3" y="373" width="1.5" height="15.0" fill="rgb(243,171,13)" rx="2" ry="2" />
<text  x="871.32" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="1182.5" y="341" width="1.5" height="15.0" fill="rgb(243,50,18)" rx="2" ry="2" />
<text  x="1185.48" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="409.8" y="149" width="1.6" height="15.0" fill="rgb(210,139,42)" rx="2" ry="2" />
<text  x="412.85" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::allocate(this=0x7fe6fa68fd70, (3 samples, 0.38%)</title><rect x="860.8" y="277" width="4.5" height="15.0" fill="rgb(250,74,43)" rx="2" ry="2" />
<text  x="863.80" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageIdAndRankconst*, (1 samples, 0.13%)</title><rect x="868.3" y="421" width="1.5" height="15.0" fill="rgb(245,53,12)" rx="2" ry="2" />
<text  x="871.32" y="431.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6eb908c58) (1 samples, 0.13%)</title><rect x="427.9" y="165" width="1.5" height="15.0" fill="rgb(245,163,15)" rx="2" ry="2" />
<text  x="430.89" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="388.8" y="101" width="1.5" height="15.0" fill="rgb(232,185,41)" rx="2" ry="2" />
<text  x="391.80" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="444.4" y="293" width="1.5" height="15.0" fill="rgb(239,39,3)" rx="2" ry="2" />
<text  x="447.42" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (46 samples, 5.86%)</title><rect x="367.8" y="293" width="69.1" height="15.0" fill="rgb(208,110,14)" rx="2" ry="2" />
<text  x="370.76" y="303.5" >std::_H..</text>
</g>
<g >
<title>std::_Vector_base&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="889.4" y="405" width="1.5" height="15.0" fill="rgb(252,92,51)" rx="2" ry="2" />
<text  x="892.36" y="415.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6a2f37158) (1 samples, 0.13%)</title><rect x="399.3" y="165" width="1.5" height="15.0" fill="rgb(219,194,28)" rx="2" ry="2" />
<text  x="402.32" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6db2643b0 (1 samples, 0.13%)</title><rect x="683.4" y="197" width="1.5" height="15.0" fill="rgb(221,89,28)" rx="2" ry="2" />
<text  x="686.43" y="207.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="859.3" y="261" width="1.5" height="15.0" fill="rgb(237,124,35)" rx="2" ry="2" />
<text  x="862.30" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="1182.5" y="325" width="1.5" height="15.0" fill="rgb(210,16,54)" rx="2" ry="2" />
<text  x="1185.48" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="836.8" y="181" width="1.5" height="15.0" fill="rgb(205,139,41)" rx="2" ry="2" />
<text  x="839.75" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.13%)</title><rect x="856.3" y="309" width="1.5" height="15.0" fill="rgb(248,158,2)" rx="2" ry="2" />
<text  x="859.29" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.13%)</title><rect x="427.9" y="133" width="1.5" height="15.0" fill="rgb(223,182,11)" rx="2" ry="2" />
<text  x="430.89" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="417.4" y="149" width="1.5" height="15.0" fill="rgb(213,194,22)" rx="2" ry="2" />
<text  x="420.36" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (46 samples, 5.86%)</title><rect x="367.8" y="325" width="69.1" height="15.0" fill="rgb(236,189,49)" rx="2" ry="2" />
<text  x="370.76" y="335.5" >std::un..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt;(__first=0x7fe6c9377d60, (1 samples, 0.13%)</title><rect x="886.4" y="389" width="1.5" height="15.0" fill="rgb(215,112,11)" rx="2" ry="2" />
<text  x="889.36" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="418.9" y="149" width="1.5" height="15.0" fill="rgb(216,165,27)" rx="2" ry="2" />
<text  x="421.87" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt;&gt;::deallocate (1 samples, 0.13%)</title><rect x="880.3" y="357" width="1.5" height="15.0" fill="rgb(222,82,42)" rx="2" ry="2" />
<text  x="883.34" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="50.6" y="277" width="1.5" height="15.0" fill="rgb(218,65,47)" rx="2" ry="2" />
<text  x="53.59" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (18 samples, 2.29%)</title><rect x="724.0" y="325" width="27.1" height="15.0" fill="rgb(238,97,22)" rx="2" ry="2" />
<text  x="727.01" y="335.5" >s..</text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f6e6fd90, (1 samples, 0.13%)</title><rect x="832.2" y="229" width="1.5" height="15.0" fill="rgb(250,203,26)" rx="2" ry="2" />
<text  x="835.24" y="239.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6eb13c008) (1 samples, 0.13%)</title><rect x="426.4" y="165" width="1.5" height="15.0" fill="rgb(216,23,4)" rx="2" ry="2" />
<text  x="429.38" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="385.8" y="133" width="1.5" height="15.0" fill="rgb(231,33,28)" rx="2" ry="2" />
<text  x="388.80" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page,Page&gt; (1 samples, 0.13%)</title><rect x="1188.5" y="389" width="1.5" height="15.0" fill="rgb(240,120,35)" rx="2" ry="2" />
<text  x="1191.50" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725403793&quot;, (1 samples, 0.13%)</title><rect x="683.4" y="213" width="1.5" height="15.0" fill="rgb(239,14,40)" rx="2" ry="2" />
<text  x="686.43" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6b0254700, (1 samples, 0.13%)</title><rect x="739.0" y="261" width="1.5" height="15.0" fill="rgb(232,137,39)" rx="2" ry="2" />
<text  x="742.04" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="869.8" y="421" width="4.5" height="15.0" fill="rgb(244,21,42)" rx="2" ry="2" />
<text  x="872.82" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="47.6" y="261" width="1.5" height="15.0" fill="rgb(253,130,1)" rx="2" ry="2" />
<text  x="50.58" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.13%)</title><rect x="1188.5" y="485" width="1.5" height="15.0" fill="rgb(210,15,26)" rx="2" ry="2" />
<text  x="1191.50" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul,PageId&amp;&amp;&gt;::_M_head (1 samples, 0.13%)</title><rect x="719.5" y="229" width="1.5" height="15.0" fill="rgb(253,172,41)" rx="2" ry="2" />
<text  x="722.50" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageIdconst*, (1 samples, 0.13%)</title><rect x="865.3" y="229" width="1.5" height="15.0" fill="rgb(226,150,15)" rx="2" ry="2" />
<text  x="868.31" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="482.0" y="293" width="6.0" height="15.0" fill="rgb(208,6,5)" rx="2" ry="2" />
<text  x="485.00" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="743.6" y="245" width="1.5" height="15.0" fill="rgb(227,204,8)" rx="2" ry="2" />
<text  x="746.55" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="697.0" y="293" width="4.5" height="15.0" fill="rgb(210,220,47)" rx="2" ry="2" />
<text  x="699.96" y="303.5" ></text>
</g>
<g >
<title>__lll_lock_wait (5 samples, 0.64%)</title><rect x="474.5" y="277" width="7.5" height="15.0" fill="rgb(218,99,22)" rx="2" ry="2" />
<text  x="477.48" y="287.5" ></text>
</g>
<g >
<title>Network::addPage(this=0x7fffc681d080, (4 samples, 0.51%)</title><rect x="1181.0" y="453" width="6.0" height="15.0" fill="rgb(221,170,20)" rx="2" ry="2" />
<text  x="1183.98" y="463.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="385.8" y="53" width="1.5" height="15.0" fill="rgb(253,167,14)" rx="2" ry="2" />
<text  x="388.80" y="63.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725349872&quot;, (1 samples, 0.13%)</title><rect x="838.3" y="213" width="1.5" height="15.0" fill="rgb(227,120,16)" rx="2" ry="2" />
<text  x="841.25" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681ced8, (1 samples, 0.13%)</title><rect x="733.0" y="277" width="1.5" height="15.0" fill="rgb(241,76,11)" rx="2" ry="2" />
<text  x="736.03" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.13%)</title><rect x="43.1" y="245" width="1.5" height="15.0" fill="rgb(209,96,5)" rx="2" ry="2" />
<text  x="46.07" y="255.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="16.0" y="213" width="1.5" height="15.0" fill="rgb(222,179,2)" rx="2" ry="2" />
<text  x="19.01" y="223.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6a4000020, (1 samples, 0.13%)</title><rect x="442.9" y="245" width="1.5" height="15.0" fill="rgb(209,77,14)" rx="2" ry="2" />
<text  x="445.92" y="255.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6fa68fd10, (10 samples, 1.27%)</title><rect x="540.6" y="341" width="15.1" height="15.0" fill="rgb(234,158,49)" rx="2" ry="2" />
<text  x="543.62" y="351.5" ></text>
</g>
<g >
<title>Page::Page(this=0x7fe6f84fbff0) (1 samples, 0.13%)</title><rect x="1188.5" y="373" width="1.5" height="15.0" fill="rgb(221,112,2)" rx="2" ry="2" />
<text  x="1191.50" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::construct&lt;Page, (1 samples, 0.13%)</title><rect x="865.3" y="309" width="1.5" height="15.0" fill="rgb(224,26,52)" rx="2" ry="2" />
<text  x="868.31" y="319.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6f665fd10, (10 samples, 1.27%)</title><rect x="509.1" y="341" width="15.0" height="15.0" fill="rgb(216,224,13)" rx="2" ry="2" />
<text  x="512.06" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="408.3" y="149" width="1.5" height="15.0" fill="rgb(233,9,50)" rx="2" ry="2" />
<text  x="411.34" y="159.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="47.6" y="133" width="1.5" height="15.0" fill="rgb(251,2,12)" rx="2" ry="2" />
<text  x="50.58" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="824.7" y="229" width="1.5" height="15.0" fill="rgb(252,58,39)" rx="2" ry="2" />
<text  x="827.73" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="403.8" y="149" width="1.5" height="15.0" fill="rgb(232,214,40)" rx="2" ry="2" />
<text  x="406.83" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="874.3" y="389" width="4.5" height="15.0" fill="rgb(212,30,15)" rx="2" ry="2" />
<text  x="877.33" y="399.5" ></text>
</g>
<g >
<title>Page::getId(this=0x7fe6f7203510) (1 samples, 0.13%)</title><rect x="14.5" y="325" width="1.5" height="15.0" fill="rgb(249,134,38)" rx="2" ry="2" />
<text  x="17.51" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.13%)</title><rect x="451.9" y="325" width="1.5" height="15.0" fill="rgb(225,11,8)" rx="2" ry="2" />
<text  x="454.94" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (5 samples, 0.64%)</title><rect x="474.5" y="293" width="7.5" height="15.0" fill="rgb(212,59,23)" rx="2" ry="2" />
<text  x="477.48" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a872532819&quot;, (1 samples, 0.13%)</title><rect x="693.9" y="213" width="1.6" height="15.0" fill="rgb(231,195,19)" rx="2" ry="2" />
<text  x="696.95" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725308278&quot;, (1 samples, 0.13%)</title><rect x="835.2" y="213" width="1.6" height="15.0" fill="rgb(236,67,11)" rx="2" ry="2" />
<text  x="838.25" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="808.2" y="277" width="1.5" height="15.0" fill="rgb(238,17,28)" rx="2" ry="2" />
<text  x="811.19" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6dca19990, (1 samples, 0.13%)</title><rect x="848.8" y="261" width="1.5" height="15.0" fill="rgb(211,229,17)" rx="2" ry="2" />
<text  x="851.78" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="692.4" y="181" width="1.5" height="15.0" fill="rgb(244,12,49)" rx="2" ry="2" />
<text  x="695.45" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="740.5" y="245" width="1.6" height="15.0" fill="rgb(236,222,7)" rx="2" ry="2" />
<text  x="743.55" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;PageId&amp;&amp;&gt;::tuple(this=0x7fe6fa68fb60) (1 samples, 0.13%)</title><rect x="721.0" y="261" width="1.5" height="15.0" fill="rgb(246,72,7)" rx="2" ry="2" />
<text  x="724.01" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (92 samples, 11.72%)</title><rect x="563.2" y="309" width="138.3" height="15.0" fill="rgb(236,85,27)" rx="2" ry="2" />
<text  x="566.17" y="319.5" >std::_Hashtable&lt;P..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (5 samples, 0.64%)</title><rect x="656.4" y="261" width="7.5" height="15.0" fill="rgb(226,81,9)" rx="2" ry="2" />
<text  x="659.37" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="709.0" y="245" width="1.5" height="15.0" fill="rgb(249,38,9)" rx="2" ry="2" />
<text  x="711.98" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait (10 samples, 1.27%)</title><rect x="540.6" y="277" width="15.1" height="15.0" fill="rgb(232,63,8)" rx="2" ry="2" />
<text  x="543.62" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (70 samples, 8.92%)</title><rect x="751.1" y="325" width="105.2" height="15.0" fill="rgb(228,223,32)" rx="2" ry="2" />
<text  x="754.07" y="335.5" >std::__detai..</text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a872516675&quot;, (1 samples, 0.13%)</title><rect x="692.4" y="213" width="1.5" height="15.0" fill="rgb(242,219,15)" rx="2" ry="2" />
<text  x="695.45" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;PageIdconst, (4 samples, 0.51%)</title><rect x="385.8" y="165" width="6.0" height="15.0" fill="rgb(245,69,37)" rx="2" ry="2" />
<text  x="388.80" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="423.4" y="149" width="1.5" height="15.0" fill="rgb(212,93,15)" rx="2" ry="2" />
<text  x="426.38" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (88 samples, 11.21%)</title><rect x="564.7" y="293" width="132.3" height="15.0" fill="rgb(235,173,32)" rx="2" ry="2" />
<text  x="567.68" y="303.5" >std::_Hashtable&lt;..</text>
</g>
<g >
<title>std::_Destroy&lt;PageId*&gt;(__first=0x7fe6c91cd960, (1 samples, 0.13%)</title><rect x="886.4" y="405" width="1.5" height="15.0" fill="rgb(226,30,7)" rx="2" ry="2" />
<text  x="889.36" y="415.5" ></text>
</g>
<g >
<title>PageIdHash::operator()(this=0x7fffc681ce68, (4 samples, 0.51%)</title><rect x="845.8" y="293" width="6.0" height="15.0" fill="rgb(249,186,12)" rx="2" ry="2" />
<text  x="848.77" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6e4e4def0, (1 samples, 0.13%)</title><rect x="35.6" y="245" width="1.5" height="15.0" fill="rgb(254,57,40)" rx="2" ry="2" />
<text  x="38.55" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.13%)</title><rect x="856.3" y="261" width="1.5" height="15.0" fill="rgb(217,84,11)" rx="2" ry="2" />
<text  x="859.29" y="271.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f665fd90, (1 samples, 0.13%)</title><rect x="686.4" y="229" width="1.5" height="15.0" fill="rgb(241,27,5)" rx="2" ry="2" />
<text  x="689.43" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="672.9" y="181" width="1.5" height="15.0" fill="rgb(216,52,22)" rx="2" ry="2" />
<text  x="675.90" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=0x7fffc681cc8f, (1 samples, 0.13%)</title><rect x="880.3" y="341" width="1.5" height="15.0" fill="rgb(235,66,7)" rx="2" ry="2" />
<text  x="883.34" y="351.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6fa68fd90, (3 samples, 0.38%)</title><rect x="680.4" y="229" width="4.5" height="15.0" fill="rgb(223,8,22)" rx="2" ry="2" />
<text  x="683.42" y="239.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6d77dfd10, (5 samples, 0.64%)</title><rect x="474.5" y="341" width="7.5" height="15.0" fill="rgb(222,43,9)" rx="2" ry="2" />
<text  x="477.48" y="351.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (2 samples, 0.25%)</title><rect x="862.3" y="229" width="3.0" height="15.0" fill="rgb(220,143,54)" rx="2" ry="2" />
<text  x="865.31" y="239.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="863.8" y="213" width="1.5" height="15.0" fill="rgb(207,47,23)" rx="2" ry="2" />
<text  x="866.81" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.25%)</title><rect x="35.6" y="293" width="3.0" height="15.0" fill="rgb(240,208,22)" rx="2" ry="2" />
<text  x="38.55" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="430.9" y="149" width="1.5" height="15.0" fill="rgb(244,114,1)" rx="2" ry="2" />
<text  x="433.89" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="16.0" y="293" width="1.5" height="15.0" fill="rgb(217,32,0)" rx="2" ry="2" />
<text  x="19.01" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.25%)</title><rect x="748.1" y="309" width="3.0" height="15.0" fill="rgb(242,54,14)" rx="2" ry="2" />
<text  x="751.06" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725359283&quot;, (1 samples, 0.13%)</title><rect x="674.4" y="213" width="1.5" height="15.0" fill="rgb(225,98,14)" rx="2" ry="2" />
<text  x="677.41" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6da222f98) (1 samples, 0.13%)</title><rect x="418.9" y="165" width="1.5" height="15.0" fill="rgb(244,175,5)" rx="2" ry="2" />
<text  x="421.87" y="175.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="35.6" y="261" width="1.5" height="15.0" fill="rgb(254,102,44)" rx="2" ry="2" />
<text  x="38.55" y="271.5" ></text>
</g>
<g >
<title>__pthread_clockjoin_ex (192 samples, 24.46%)</title><rect x="890.9" y="437" width="288.6" height="15.0" fill="rgb(234,67,14)" rx="2" ry="2" />
<text  x="893.87" y="447.5" >__pthread_clockjoin_ex</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="435.4" y="149" width="1.5" height="15.0" fill="rgb(249,158,28)" rx="2" ry="2" />
<text  x="438.40" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=0x7fffc681cc8f, (3 samples, 0.38%)</title><rect x="874.3" y="341" width="4.5" height="15.0" fill="rgb(242,50,19)" rx="2" ry="2" />
<text  x="877.33" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725482921&quot;, (1 samples, 0.13%)</title><rect x="686.4" y="213" width="1.5" height="15.0" fill="rgb(229,48,34)" rx="2" ry="2" />
<text  x="689.43" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (8 samples, 1.02%)</title><rect x="811.2" y="261" width="12.0" height="15.0" fill="rgb(230,61,50)" rx="2" ry="2" />
<text  x="814.20" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6bfdb6e18) (1 samples, 0.13%)</title><rect x="409.8" y="165" width="1.6" height="15.0" fill="rgb(212,96,41)" rx="2" ry="2" />
<text  x="412.85" y="175.5" ></text>
</g>
<g >
<title>??() (571 samples, 72.74%)</title><rect x="10.0" y="469" width="858.3" height="15.0" fill="rgb(236,137,46)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >??()</text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6da3cbfa8) (1 samples, 0.13%)</title><rect x="388.8" y="149" width="1.5" height="15.0" fill="rgb(215,168,8)" rx="2" ry="2" />
<text  x="391.80" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6fa68fc80) (1 samples, 0.13%)</title><rect x="13.0" y="309" width="1.5" height="15.0" fill="rgb(240,2,53)" rx="2" ry="2" />
<text  x="16.01" y="319.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;PageId,PageIdHash, (4 samples, 0.51%)</title><rect x="880.3" y="437" width="6.1" height="15.0" fill="rgb(248,149,51)" rx="2" ry="2" />
<text  x="883.34" y="447.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="715.0" y="213" width="1.5" height="15.0" fill="rgb(251,141,7)" rx="2" ry="2" />
<text  x="717.99" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (112 samples, 14.27%)</title><rect x="555.7" y="325" width="168.3" height="15.0" fill="rgb(215,165,47)" rx="2" ry="2" />
<text  x="558.66" y="335.5" >std::__detail::_Map_b..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul,PageId&amp;&amp;, (1 samples, 0.13%)</title><rect x="719.5" y="213" width="1.5" height="15.0" fill="rgb(227,97,16)" rx="2" ry="2" />
<text  x="722.50" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6ef6eb1a8) (1 samples, 0.13%)</title><rect x="430.9" y="165" width="1.5" height="15.0" fill="rgb(219,70,18)" rx="2" ry="2" />
<text  x="433.89" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt;&gt;::construct&lt;PageIdAndRank, (1 samples, 0.13%)</title><rect x="436.9" y="293" width="1.5" height="15.0" fill="rgb(208,77,24)" rx="2" ry="2" />
<text  x="439.90" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="845.8" y="245" width="1.5" height="15.0" fill="rgb(205,152,24)" rx="2" ry="2" />
<text  x="848.77" y="255.5" ></text>
</g>
<g >
<title>Page::Page(this=0x7fe6c801f920) (1 samples, 0.13%)</title><rect x="857.8" y="293" width="1.5" height="15.0" fill="rgb(248,191,28)" rx="2" ry="2" />
<text  x="860.80" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6f5e4fd90, (1 samples, 0.13%)</title><rect x="462.5" y="341" width="1.5" height="15.0" fill="rgb(242,219,41)" rx="2" ry="2" />
<text  x="465.46" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul,PageId&amp;&amp;&gt;::_Tuple_impl (1 samples, 0.13%)</title><rect x="719.5" y="245" width="1.5" height="15.0" fill="rgb(233,6,16)" rx="2" ry="2" />
<text  x="722.50" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;PageIdconst, (3 samples, 0.38%)</title><rect x="851.8" y="309" width="4.5" height="15.0" fill="rgb(205,111,18)" rx="2" ry="2" />
<text  x="854.78" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6fa68fd90) (4 samples, 0.51%)</title><rect x="456.4" y="341" width="6.1" height="15.0" fill="rgb(241,48,52)" rx="2" ry="2" />
<text  x="459.45" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::deallocate(this=0x7fe6d7fefd70, (1 samples, 0.13%)</title><rect x="856.3" y="277" width="1.5" height="15.0" fill="rgb(252,90,2)" rx="2" ry="2" />
<text  x="859.29" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6fa68fc70) (2 samples, 0.25%)</title><rect x="50.6" y="309" width="3.0" height="15.0" fill="rgb(206,20,21)" rx="2" ry="2" />
<text  x="53.59" y="319.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::WorkerData::getResult(this=0x7fffc681cde0) (1 samples, 0.13%)</title><rect x="868.3" y="453" width="1.5" height="15.0" fill="rgb(218,117,13)" rx="2" ry="2" />
<text  x="871.32" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="680.4" y="197" width="1.5" height="15.0" fill="rgb(224,216,4)" rx="2" ry="2" />
<text  x="683.42" y="207.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.25%)</title><rect x="468.5" y="309" width="3.0" height="15.0" fill="rgb(242,122,3)" rx="2" ry="2" />
<text  x="471.47" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="47.6" y="213" width="1.5" height="15.0" fill="rgb(219,22,37)" rx="2" ry="2" />
<text  x="50.58" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6cc3c0840, (1 samples, 0.13%)</title><rect x="742.1" y="261" width="1.5" height="15.0" fill="rgb(248,226,24)" rx="2" ry="2" />
<text  x="745.05" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="37.1" y="277" width="1.5" height="15.0" fill="rgb(215,114,5)" rx="2" ry="2" />
<text  x="40.06" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x7fe6d44cb8d0, (1 samples, 0.13%)</title><rect x="860.8" y="197" width="1.5" height="15.0" fill="rgb(208,170,25)" rx="2" ry="2" />
<text  x="863.80" y="207.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="384.3" y="133" width="1.5" height="15.0" fill="rgb(230,6,37)" rx="2" ry="2" />
<text  x="387.29" y="143.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="857.8" y="245" width="1.5" height="15.0" fill="rgb(249,118,31)" rx="2" ry="2" />
<text  x="860.80" y="255.5" ></text>
</g>
<g >
<title>PageIdHash::operator()(this=0x7fffc681ce30, (2 samples, 0.25%)</title><rect x="709.0" y="293" width="3.0" height="15.0" fill="rgb(243,122,37)" rx="2" ry="2" />
<text  x="711.98" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="742.1" y="245" width="1.5" height="15.0" fill="rgb(213,172,28)" rx="2" ry="2" />
<text  x="745.05" y="255.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6fa68fd90, (4 samples, 0.51%)</title><rect x="833.7" y="229" width="6.1" height="15.0" fill="rgb(207,122,13)" rx="2" ry="2" />
<text  x="836.75" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="681.9" y="181" width="1.5" height="15.0" fill="rgb(221,85,3)" rx="2" ry="2" />
<text  x="684.92" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="850.3" y="261" width="1.5" height="15.0" fill="rgb(228,179,43)" rx="2" ry="2" />
<text  x="853.28" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6970da408) (1 samples, 0.13%)</title><rect x="397.8" y="165" width="1.5" height="15.0" fill="rgb(242,226,10)" rx="2" ry="2" />
<text  x="400.82" y="175.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="47.6" y="149" width="1.5" height="15.0" fill="rgb(216,0,41)" rx="2" ry="2" />
<text  x="50.58" y="159.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6fa68fd90, (3 samples, 0.38%)</title><rect x="692.4" y="229" width="4.6" height="15.0" fill="rgb(232,95,43)" rx="2" ry="2" />
<text  x="695.45" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (7 samples, 0.89%)</title><rect x="498.5" y="293" width="10.6" height="15.0" fill="rgb(229,145,46)" rx="2" ry="2" />
<text  x="501.54" y="303.5" ></text>
</g>
<g >
<title>std::thread::join()() (192 samples, 24.46%)</title><rect x="890.9" y="453" width="288.6" height="15.0" fill="rgb(253,182,24)" rx="2" ry="2" />
<text  x="893.87" y="463.5" >std::thread::join()()</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (2 samples, 0.25%)</title><rect x="44.6" y="245" width="3.0" height="15.0" fill="rgb(224,187,18)" rx="2" ry="2" />
<text  x="47.57" y="255.5" ></text>
</g>
<g >
<title>pageRankComputationWithNumNodes(num=500000, (213 samples, 27.13%)</title><rect x="868.3" y="485" width="320.2" height="15.0" fill="rgb(232,10,14)" rx="2" ry="2" />
<text  x="871.32" y="495.5" >pageRankComputationWithNumNodes(num=500000,</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageIdconst*, (1 samples, 0.13%)</title><rect x="865.3" y="245" width="1.5" height="15.0" fill="rgb(216,39,37)" rx="2" ry="2" />
<text  x="868.31" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;PageId&amp;&amp;&gt;::tuple(this=0x7fe6f5e4fb60) (1 samples, 0.13%)</title><rect x="719.5" y="261" width="1.5" height="15.0" fill="rgb(245,186,33)" rx="2" ry="2" />
<text  x="722.50" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt;&gt;::deallocate (2 samples, 0.25%)</title><rect x="869.8" y="357" width="3.0" height="15.0" fill="rgb(207,224,4)" rx="2" ry="2" />
<text  x="872.82" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page,std::allocator&lt;Page&gt; (4 samples, 0.51%)</title><rect x="859.3" y="309" width="6.0" height="15.0" fill="rgb(232,144,48)" rx="2" ry="2" />
<text  x="862.30" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681ce30, (1 samples, 0.13%)</title><rect x="700.0" y="277" width="1.5" height="15.0" fill="rgb(223,98,10)" rx="2" ry="2" />
<text  x="702.96" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6c801f920) (1 samples, 0.13%)</title><rect x="857.8" y="277" width="1.5" height="15.0" fill="rgb(235,81,5)" rx="2" ry="2" />
<text  x="860.80" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725449803&quot;, (1 samples, 0.13%)</title><rect x="832.2" y="213" width="1.5" height="15.0" fill="rgb(231,125,21)" rx="2" ry="2" />
<text  x="835.24" y="223.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="467.0" y="325" width="1.5" height="15.0" fill="rgb(232,140,43)" rx="2" ry="2" />
<text  x="469.97" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725325031&quot;, (1 samples, 0.13%)</title><rect x="681.9" y="213" width="1.5" height="15.0" fill="rgb(246,92,2)" rx="2" ry="2" />
<text  x="684.92" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6a8956ff0) (1 samples, 0.13%)</title><rect x="866.8" y="277" width="1.5" height="15.0" fill="rgb(220,121,33)" rx="2" ry="2" />
<text  x="869.82" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.13%)</title><rect x="436.9" y="309" width="1.5" height="15.0" fill="rgb(239,23,15)" rx="2" ry="2" />
<text  x="439.90" y="319.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="40.1" y="245" width="1.5" height="15.0" fill="rgb(247,115,12)" rx="2" ry="2" />
<text  x="43.06" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="387.3" y="133" width="1.5" height="15.0" fill="rgb(232,197,4)" rx="2" ry="2" />
<text  x="390.30" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="878.8" y="373" width="1.5" height="15.0" fill="rgb(231,14,46)" rx="2" ry="2" />
<text  x="881.84" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (58 samples, 7.39%)</title><rect x="755.6" y="309" width="87.2" height="15.0" fill="rgb(220,78,35)" rx="2" ry="2" />
<text  x="758.58" y="319.5" >std::_Hash..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt;&gt;::construct&lt;PageId, (1 samples, 0.13%)</title><rect x="866.8" y="309" width="1.5" height="15.0" fill="rgb(220,89,32)" rx="2" ry="2" />
<text  x="869.82" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="838.3" y="181" width="1.5" height="15.0" fill="rgb(223,25,13)" rx="2" ry="2" />
<text  x="841.25" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6db2643b0 (1 samples, 0.13%)</title><rect x="681.9" y="197" width="1.5" height="15.0" fill="rgb(235,122,13)" rx="2" ry="2" />
<text  x="684.92" y="207.5" ></text>
</g>
<g >
<title>PageIdHash::operator() (1 samples, 0.13%)</title><rect x="701.5" y="293" width="1.5" height="15.0" fill="rgb(207,20,36)" rx="2" ry="2" />
<text  x="704.46" y="303.5" ></text>
</g>
<g >
<title>Page::Page(this=0x7fe6f6f43fb0) (1 samples, 0.13%)</title><rect x="1182.5" y="389" width="1.5" height="15.0" fill="rgb(212,140,34)" rx="2" ry="2" />
<text  x="1185.48" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="421.9" y="149" width="1.5" height="15.0" fill="rgb(226,217,25)" rx="2" ry="2" />
<text  x="424.87" y="159.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6c0000020, (1 samples, 0.13%)</title><rect x="462.5" y="325" width="1.5" height="15.0" fill="rgb(236,38,33)" rx="2" ry="2" />
<text  x="465.46" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="854.8" y="261" width="1.5" height="15.0" fill="rgb(229,139,43)" rx="2" ry="2" />
<text  x="857.79" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="390.3" y="133" width="1.5" height="15.0" fill="rgb(211,77,31)" rx="2" ry="2" />
<text  x="393.31" y="143.5" ></text>
</g>
<g >
<title>std::_Construct&lt;PageId,PageId (1 samples, 0.13%)</title><rect x="865.3" y="197" width="1.5" height="15.0" fill="rgb(234,9,36)" rx="2" ry="2" />
<text  x="868.31" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.25%)</title><rect x="709.0" y="277" width="3.0" height="15.0" fill="rgb(206,93,2)" rx="2" ry="2" />
<text  x="711.98" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="872.8" y="357" width="1.5" height="15.0" fill="rgb(227,104,43)" rx="2" ry="2" />
<text  x="875.83" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.38%)</title><rect x="803.7" y="261" width="4.5" height="15.0" fill="rgb(232,53,41)" rx="2" ry="2" />
<text  x="806.68" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;PageId&gt;(__t=...) (1 samples, 0.13%)</title><rect x="721.0" y="213" width="1.5" height="15.0" fill="rgb(225,72,37)" rx="2" ry="2" />
<text  x="724.01" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681ced8, (1 samples, 0.13%)</title><rect x="28.0" y="261" width="1.5" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="31.04" y="271.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="388.8" y="69" width="1.5" height="15.0" fill="rgb(243,133,27)" rx="2" ry="2" />
<text  x="391.80" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (36 samples, 4.59%)</title><rect x="382.8" y="245" width="54.1" height="15.0" fill="rgb(250,81,15)" rx="2" ry="2" />
<text  x="385.79" y="255.5" >std::..</text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="14.5" y="245" width="1.5" height="15.0" fill="rgb(216,34,41)" rx="2" ry="2" />
<text  x="17.51" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="718.0" y="261" width="1.5" height="15.0" fill="rgb(213,222,33)" rx="2" ry="2" />
<text  x="721.00" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (6 samples, 0.76%)</title><rect x="842.8" y="309" width="9.0" height="15.0" fill="rgb(212,200,38)" rx="2" ry="2" />
<text  x="845.76" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="26.5" y="277" width="1.5" height="15.0" fill="rgb(217,79,16)" rx="2" ry="2" />
<text  x="29.54" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="704.5" y="245" width="1.5" height="15.0" fill="rgb(206,140,6)" rx="2" ry="2" />
<text  x="707.47" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="388.8" y="133" width="1.5" height="15.0" fill="rgb(228,185,28)" rx="2" ry="2" />
<text  x="391.80" y="143.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6bc56d368, (1 samples, 0.13%)</title><rect x="433.9" y="165" width="1.5" height="15.0" fill="rgb(231,56,18)" rx="2" ry="2" />
<text  x="436.90" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.13%)</title><rect x="436.9" y="325" width="1.5" height="15.0" fill="rgb(234,69,4)" rx="2" ry="2" />
<text  x="439.90" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (18 samples, 2.29%)</title><rect x="724.0" y="341" width="27.1" height="15.0" fill="rgb(241,109,46)" rx="2" ry="2" />
<text  x="727.01" y="351.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.51%)</title><rect x="874.3" y="405" width="6.0" height="15.0" fill="rgb(211,164,41)" rx="2" ry="2" />
<text  x="877.33" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait (4 samples, 0.51%)</title><rect x="482.0" y="277" width="6.0" height="15.0" fill="rgb(213,222,35)" rx="2" ry="2" />
<text  x="485.00" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.76%)</title><rect x="641.3" y="261" width="9.1" height="15.0" fill="rgb(224,87,30)" rx="2" ry="2" />
<text  x="644.34" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6a38a0c38) (1 samples, 0.13%)</title><rect x="402.3" y="165" width="1.5" height="15.0" fill="rgb(210,6,49)" rx="2" ry="2" />
<text  x="405.33" y="175.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6a3bdc218) (1 samples, 0.13%)</title><rect x="403.8" y="165" width="1.5" height="15.0" fill="rgb(227,13,41)" rx="2" ry="2" />
<text  x="406.83" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="733.0" y="293" width="1.5" height="15.0" fill="rgb(245,229,47)" rx="2" ry="2" />
<text  x="736.03" y="303.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6dbddca28) (1 samples, 0.13%)</title><rect x="423.4" y="165" width="1.5" height="15.0" fill="rgb(240,204,38)" rx="2" ry="2" />
<text  x="426.38" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="427.9" y="149" width="1.5" height="15.0" fill="rgb(209,88,44)" rx="2" ry="2" />
<text  x="430.89" y="159.5" ></text>
</g>
<g >
<title>PageIdAndRank::PageIdAndRank(this=0x7fffbf140510) (1 samples, 0.13%)</title><rect x="868.3" y="357" width="1.5" height="15.0" fill="rgb(214,195,17)" rx="2" ry="2" />
<text  x="871.32" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d35d9850 (1 samples, 0.13%)</title><rect x="672.9" y="197" width="1.5" height="15.0" fill="rgb(216,63,33)" rx="2" ry="2" />
<text  x="675.90" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="722.5" y="293" width="1.5" height="15.0" fill="rgb(242,173,49)" rx="2" ry="2" />
<text  x="725.51" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fe6dca19990) (1 samples, 0.13%)</title><rect x="465.5" y="325" width="1.5" height="15.0" fill="rgb(224,146,52)" rx="2" ry="2" />
<text  x="468.46" y="335.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6e397b0c8, (1 samples, 0.13%)</title><rect x="884.9" y="325" width="1.5" height="15.0" fill="rgb(246,68,32)" rx="2" ry="2" />
<text  x="887.85" y="335.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6fa68fc80) (1 samples, 0.13%)</title><rect x="14.5" y="309" width="1.5" height="15.0" fill="rgb(229,199,35)" rx="2" ry="2" />
<text  x="17.51" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f6e6fc40) (1 samples, 0.13%)</title><rect x="366.3" y="309" width="1.5" height="15.0" fill="rgb(208,123,39)" rx="2" ry="2" />
<text  x="369.25" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free(mem=0x7fe6f02d9d10) (1 samples, 0.13%)</title><rect x="887.9" y="341" width="1.5" height="15.0" fill="rgb(209,29,36)" rx="2" ry="2" />
<text  x="890.86" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::allocate(this=0x7fe6f4e2fd70, (1 samples, 0.13%)</title><rect x="859.3" y="277" width="1.5" height="15.0" fill="rgb(241,107,27)" rx="2" ry="2" />
<text  x="862.30" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (11 samples, 1.40%)</title><rect x="524.1" y="293" width="16.5" height="15.0" fill="rgb(246,33,27)" rx="2" ry="2" />
<text  x="527.09" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.51%)</title><rect x="703.0" y="277" width="6.0" height="15.0" fill="rgb(218,205,44)" rx="2" ry="2" />
<text  x="705.97" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="14.5" y="293" width="1.5" height="15.0" fill="rgb(211,74,39)" rx="2" ry="2" />
<text  x="17.51" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="25.0" y="245" width="1.5" height="15.0" fill="rgb(215,32,24)" rx="2" ry="2" />
<text  x="28.03" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="14.5" y="277" width="1.5" height="15.0" fill="rgb(244,80,48)" rx="2" ry="2" />
<text  x="17.51" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d8efa030 (1 samples, 0.13%)</title><rect x="689.4" y="197" width="1.5" height="15.0" fill="rgb(245,225,20)" rx="2" ry="2" />
<text  x="692.44" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725387020&quot;, (1 samples, 0.13%)</title><rect x="675.9" y="213" width="1.5" height="15.0" fill="rgb(237,187,7)" rx="2" ry="2" />
<text  x="678.91" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.13%)</title><rect x="856.3" y="325" width="1.5" height="15.0" fill="rgb(249,72,1)" rx="2" ry="2" />
<text  x="859.29" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="382.8" y="213" width="1.5" height="15.0" fill="rgb(224,192,3)" rx="2" ry="2" />
<text  x="385.79" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (5 samples, 0.64%)</title><rect x="384.3" y="181" width="7.5" height="15.0" fill="rgb(237,219,32)" rx="2" ry="2" />
<text  x="387.29" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="454.9" y="309" width="1.5" height="15.0" fill="rgb(248,0,13)" rx="2" ry="2" />
<text  x="457.94" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="408.3" y="133" width="1.5" height="15.0" fill="rgb(228,73,41)" rx="2" ry="2" />
<text  x="411.34" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="1185.5" y="373" width="1.5" height="15.0" fill="rgb(223,203,45)" rx="2" ry="2" />
<text  x="1188.49" y="383.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6efcb0828) (1 samples, 0.13%)</title><rect x="390.3" y="149" width="1.5" height="15.0" fill="rgb(242,207,1)" rx="2" ry="2" />
<text  x="393.31" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="47.6" y="277" width="1.5" height="15.0" fill="rgb(215,169,16)" rx="2" ry="2" />
<text  x="50.58" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725316180&quot;, (1 samples, 0.13%)</title><rect x="836.8" y="213" width="1.5" height="15.0" fill="rgb(246,38,51)" rx="2" ry="2" />
<text  x="839.75" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="396.3" y="149" width="1.5" height="15.0" fill="rgb(242,208,1)" rx="2" ry="2" />
<text  x="399.32" y="159.5" ></text>
</g>
<g >
<title>__vsnprintf_internal(string=0x7fffc681cd10 (1 samples, 0.13%)</title><rect x="1187.0" y="405" width="1.5" height="15.0" fill="rgb(224,148,23)" rx="2" ry="2" />
<text  x="1189.99" y="415.5" ></text>
</g>
<g >
<title>std::operator+&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="442.9" y="309" width="1.5" height="15.0" fill="rgb(230,85,23)" rx="2" ry="2" />
<text  x="445.92" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (4 samples, 0.51%)</title><rect x="874.3" y="437" width="6.0" height="15.0" fill="rgb(244,84,53)" rx="2" ry="2" />
<text  x="877.33" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (7 samples, 0.89%)</title><rect x="17.5" y="325" width="10.5" height="15.0" fill="rgb(248,17,24)" rx="2" ry="2" />
<text  x="20.52" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageIdconst*, (1 samples, 0.13%)</title><rect x="865.3" y="213" width="1.5" height="15.0" fill="rgb(235,59,36)" rx="2" ry="2" />
<text  x="868.31" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="745.1" y="245" width="1.5" height="15.0" fill="rgb(228,107,23)" rx="2" ry="2" />
<text  x="748.06" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="445.9" y="293" width="1.5" height="15.0" fill="rgb(214,198,40)" rx="2" ry="2" />
<text  x="448.92" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="429.4" y="133" width="1.5" height="15.0" fill="rgb(225,105,33)" rx="2" ry="2" />
<text  x="432.39" y="143.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt;() (1 samples, 0.13%)</title><rect x="459.5" y="293" width="1.5" height="15.0" fill="rgb(210,219,24)" rx="2" ry="2" />
<text  x="462.45" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="28.0" y="293" width="1.5" height="15.0" fill="rgb(232,145,7)" rx="2" ry="2" />
<text  x="31.04" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;, (571 samples, 72.74%)</title><rect x="10.0" y="437" width="858.3" height="15.0" fill="rgb(248,85,41)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;,</text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725122490&quot;, (1 samples, 0.13%)</title><rect x="833.7" y="213" width="1.5" height="15.0" fill="rgb(231,168,12)" rx="2" ry="2" />
<text  x="836.75" y="223.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator()(this=0x7fffc681cdf8, (9 samples, 1.15%)</title><rect x="671.4" y="245" width="13.5" height="15.0" fill="rgb(245,52,49)" rx="2" ry="2" />
<text  x="674.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId,std::pair&lt;PageId (11 samples, 1.40%)</title><rect x="823.2" y="261" width="16.6" height="15.0" fill="rgb(217,114,35)" rx="2" ry="2" />
<text  x="826.22" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,std::vector&lt;PageId, (1 samples, 0.13%)</title><rect x="28.0" y="325" width="1.5" height="15.0" fill="rgb(207,206,31)" rx="2" ry="2" />
<text  x="31.04" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="669.9" y="245" width="1.5" height="15.0" fill="rgb(252,132,30)" rx="2" ry="2" />
<text  x="672.90" y="255.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="540.6" y="325" width="15.1" height="15.0" fill="rgb(250,85,9)" rx="2" ry="2" />
<text  x="543.62" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6c2cdf720 (1 samples, 0.13%)</title><rect x="674.4" y="197" width="1.5" height="15.0" fill="rgb(207,184,44)" rx="2" ry="2" />
<text  x="677.41" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.13%)</title><rect x="639.8" y="277" width="1.5" height="15.0" fill="rgb(238,175,38)" rx="2" ry="2" />
<text  x="642.83" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt;(__pointer=0x7fe6c9377d60) (1 samples, 0.13%)</title><rect x="886.4" y="373" width="1.5" height="15.0" fill="rgb(249,174,23)" rx="2" ry="2" />
<text  x="889.36" y="383.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6f6e6fd10, (11 samples, 1.40%)</title><rect x="524.1" y="341" width="16.5" height="15.0" fill="rgb(209,152,31)" rx="2" ry="2" />
<text  x="527.09" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;Page,Page, (1 samples, 0.13%)</title><rect x="1188.5" y="421" width="1.5" height="15.0" fill="rgb(235,44,42)" rx="2" ry="2" />
<text  x="1191.50" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6dca19990 (1 samples, 0.13%)</title><rect x="838.3" y="197" width="1.5" height="15.0" fill="rgb(243,147,13)" rx="2" ry="2" />
<text  x="841.25" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="540.6" y="309" width="15.1" height="15.0" fill="rgb(208,158,51)" rx="2" ry="2" />
<text  x="543.62" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=65) (1 samples, 0.13%)</title><rect x="442.9" y="261" width="1.5" height="15.0" fill="rgb(208,47,37)" rx="2" ry="2" />
<text  x="445.92" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725154277&quot;, (1 samples, 0.13%)</title><rect x="25.0" y="197" width="1.5" height="15.0" fill="rgb(251,180,23)" rx="2" ry="2" />
<text  x="28.03" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="426.4" y="149" width="1.5" height="15.0" fill="rgb(251,68,9)" rx="2" ry="2" />
<text  x="429.38" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.25%)</title><rect x="560.2" y="309" width="3.0" height="15.0" fill="rgb(252,210,42)" rx="2" ry="2" />
<text  x="563.17" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681cdf8, (2 samples, 0.25%)</title><rect x="697.0" y="277" width="3.0" height="15.0" fill="rgb(222,1,5)" rx="2" ry="2" />
<text  x="699.96" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="14.5" y="261" width="1.5" height="15.0" fill="rgb(246,87,21)" rx="2" ry="2" />
<text  x="17.51" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="47.6" y="229" width="1.5" height="15.0" fill="rgb(227,52,29)" rx="2" ry="2" />
<text  x="50.58" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.13%)</title><rect x="875.8" y="309" width="1.5" height="15.0" fill="rgb(251,85,27)" rx="2" ry="2" />
<text  x="878.83" y="319.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="715.0" y="197" width="1.5" height="15.0" fill="rgb(223,65,3)" rx="2" ry="2" />
<text  x="717.99" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="854.8" y="293" width="1.5" height="15.0" fill="rgb(226,209,42)" rx="2" ry="2" />
<text  x="857.79" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6c2cdf680 (1 samples, 0.13%)</title><rect x="675.9" y="197" width="1.5" height="15.0" fill="rgb(250,73,0)" rx="2" ry="2" />
<text  x="678.91" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="722.5" y="277" width="1.5" height="15.0" fill="rgb(226,67,24)" rx="2" ry="2" />
<text  x="725.51" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="706.0" y="245" width="1.5" height="15.0" fill="rgb(216,44,38)" rx="2" ry="2" />
<text  x="708.97" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725219449&quot;, (1 samples, 0.13%)</title><rect x="672.9" y="213" width="1.5" height="15.0" fill="rgb(242,135,30)" rx="2" ry="2" />
<text  x="675.90" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;PageId,std::pair&lt;PageId (8 samples, 1.02%)</title><rect x="29.5" y="309" width="12.1" height="15.0" fill="rgb(239,148,51)" rx="2" ry="2" />
<text  x="32.54" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page,Page (1 samples, 0.13%)</title><rect x="857.8" y="309" width="1.5" height="15.0" fill="rgb(226,72,1)" rx="2" ry="2" />
<text  x="860.80" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate(this=0x7fffc681cde0, (1 samples, 0.13%)</title><rect x="889.4" y="373" width="1.5" height="15.0" fill="rgb(251,169,30)" rx="2" ry="2" />
<text  x="892.36" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="1182.5" y="357" width="1.5" height="15.0" fill="rgb(234,188,33)" rx="2" ry="2" />
<text  x="1185.48" y="367.5" ></text>
</g>
<g >
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;)() (208 samples, 26.50%)</title><rect x="53.6" y="309" width="312.7" height="15.0" fill="rgb(229,140,22)" rx="2" ry="2" />
<text  x="56.59" y="319.5" >std::condition_variable::wait(std::unique_..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt;&gt;::deallocate (1 samples, 0.13%)</title><rect x="889.4" y="389" width="1.5" height="15.0" fill="rgb(207,69,37)" rx="2" ry="2" />
<text  x="892.36" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6d8efa080, (1 samples, 0.13%)</title><rect x="847.3" y="261" width="1.5" height="15.0" fill="rgb(221,186,15)" rx="2" ry="2" />
<text  x="850.27" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="415.9" y="149" width="1.5" height="15.0" fill="rgb(253,182,6)" rx="2" ry="2" />
<text  x="418.86" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;Page*,Page*, (1 samples, 0.13%)</title><rect x="1188.5" y="437" width="1.5" height="15.0" fill="rgb(219,138,19)" rx="2" ry="2" />
<text  x="1191.50" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="880.3" y="373" width="1.5" height="15.0" fill="rgb(219,224,6)" rx="2" ry="2" />
<text  x="883.34" y="383.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="40.1" y="213" width="1.5" height="15.0" fill="rgb(219,43,42)" rx="2" ry="2" />
<text  x="43.06" y="223.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="482.0" y="309" width="6.0" height="15.0" fill="rgb(213,84,6)" rx="2" ry="2" />
<text  x="485.00" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait (4 samples, 0.51%)</title><rect x="488.0" y="277" width="6.0" height="15.0" fill="rgb(225,93,49)" rx="2" ry="2" />
<text  x="491.01" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;PageId, (2 samples, 0.25%)</title><rect x="44.6" y="229" width="3.0" height="15.0" fill="rgb(235,162,40)" rx="2" ry="2" />
<text  x="47.57" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;PageIdconst, (28 samples, 3.57%)</title><rect x="394.8" y="181" width="42.1" height="15.0" fill="rgb(244,25,26)" rx="2" ry="2" />
<text  x="397.82" y="191.5" >std..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.13%)</title><rect x="734.5" y="309" width="1.5" height="15.0" fill="rgb(239,157,44)" rx="2" ry="2" />
<text  x="737.54" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6da421fe8) (1 samples, 0.13%)</title><rect x="420.4" y="165" width="1.5" height="15.0" fill="rgb(211,114,19)" rx="2" ry="2" />
<text  x="423.37" y="175.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="385.8" y="37" width="1.5" height="15.0" fill="rgb(238,140,11)" rx="2" ry="2" />
<text  x="388.80" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (2 samples, 0.25%)</title><rect x="38.6" y="277" width="3.0" height="15.0" fill="rgb(235,159,46)" rx="2" ry="2" />
<text  x="41.56" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (3 samples, 0.38%)</title><rect x="438.4" y="325" width="4.5" height="15.0" fill="rgb(251,206,20)" rx="2" ry="2" />
<text  x="441.41" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId&gt;(__pointer=0x7fe6cab9c4d0) (1 samples, 0.13%)</title><rect x="887.9" y="373" width="1.5" height="15.0" fill="rgb(214,108,33)" rx="2" ry="2" />
<text  x="890.86" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6d4da0100, (1 samples, 0.13%)</title><rect x="706.0" y="261" width="1.5" height="15.0" fill="rgb(244,49,9)" rx="2" ry="2" />
<text  x="708.97" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::construct&lt;Page, (3 samples, 0.38%)</title><rect x="1182.5" y="421" width="4.5" height="15.0" fill="rgb(241,204,17)" rx="2" ry="2" />
<text  x="1185.48" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="841.3" y="277" width="1.5" height="15.0" fill="rgb(227,184,50)" rx="2" ry="2" />
<text  x="844.26" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6db2643b0 (1 samples, 0.13%)</title><rect x="833.7" y="197" width="1.5" height="15.0" fill="rgb(214,5,54)" rx="2" ry="2" />
<text  x="836.75" y="207.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="690.9" y="181" width="1.5" height="15.0" fill="rgb(208,9,49)" rx="2" ry="2" />
<text  x="693.94" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a872529498&quot;, (1 samples, 0.13%)</title><rect x="689.4" y="213" width="1.5" height="15.0" fill="rgb(232,226,33)" rx="2" ry="2" />
<text  x="692.44" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="675.9" y="181" width="1.5" height="15.0" fill="rgb(246,130,2)" rx="2" ry="2" />
<text  x="678.91" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.13%)</title><rect x="865.3" y="165" width="1.5" height="15.0" fill="rgb(214,133,20)" rx="2" ry="2" />
<text  x="868.31" y="175.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.13%)</title><rect x="874.3" y="309" width="1.5" height="15.0" fill="rgb(250,161,24)" rx="2" ry="2" />
<text  x="877.33" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d9ce57b8) (1 samples, 0.13%)</title><rect x="414.4" y="165" width="1.5" height="15.0" fill="rgb(230,31,37)" rx="2" ry="2" />
<text  x="417.36" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d4da0100 (1 samples, 0.13%)</title><rect x="687.9" y="197" width="1.5" height="15.0" fill="rgb(221,83,17)" rx="2" ry="2" />
<text  x="690.94" y="207.5" ></text>
</g>
<g >
<title>Page::getId(this=0x7fe6f6f694b0) (1 samples, 0.13%)</title><rect x="13.0" y="325" width="1.5" height="15.0" fill="rgb(207,188,45)" rx="2" ry="2" />
<text  x="16.01" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (4 samples, 0.51%)</title><rect x="880.3" y="405" width="6.1" height="15.0" fill="rgb(222,148,21)" rx="2" ry="2" />
<text  x="883.34" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681cdf8, (1 samples, 0.13%)</title><rect x="26.5" y="261" width="1.5" height="15.0" fill="rgb(207,100,20)" rx="2" ry="2" />
<text  x="29.54" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="835.2" y="181" width="1.6" height="15.0" fill="rgb(221,69,42)" rx="2" ry="2" />
<text  x="838.25" y="191.5" ></text>
</g>
<g >
<title>_itoa_word(value=value@entry=141617, (1 samples, 0.13%)</title><rect x="1187.0" y="373" width="1.5" height="15.0" fill="rgb(206,80,38)" rx="2" ry="2" />
<text  x="1189.99" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (10 samples, 1.27%)</title><rect x="367.8" y="277" width="15.0" height="15.0" fill="rgb(227,17,2)" rx="2" ry="2" />
<text  x="370.76" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul,PageId&amp;&amp;&gt;::_Tuple_impl (1 samples, 0.13%)</title><rect x="721.0" y="245" width="1.5" height="15.0" fill="rgb(210,156,15)" rx="2" ry="2" />
<text  x="724.01" y="255.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="40.1" y="197" width="1.5" height="15.0" fill="rgb(217,121,23)" rx="2" ry="2" />
<text  x="43.06" y="207.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6ef0810f8) (1 samples, 0.13%)</title><rect x="429.4" y="165" width="1.5" height="15.0" fill="rgb(206,33,36)" rx="2" ry="2" />
<text  x="432.39" y="175.5" ></text>
</g>
<g >
<title>PageIdHash::operator()(this=0x7fffc681ced8, (7 samples, 0.89%)</title><rect x="737.5" y="293" width="10.6" height="15.0" fill="rgb(226,165,26)" rx="2" ry="2" />
<text  x="740.54" y="303.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt;(__first=0x7fe6f1835b80 (1 samples, 0.13%)</title><rect x="461.0" y="309" width="1.5" height="15.0" fill="rgb(251,221,31)" rx="2" ry="2" />
<text  x="463.96" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6d4da0100, (1 samples, 0.13%)</title><rect x="845.8" y="261" width="1.5" height="15.0" fill="rgb(226,220,23)" rx="2" ry="2" />
<text  x="848.77" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::construct&lt;Page, (1 samples, 0.13%)</title><rect x="1188.5" y="405" width="1.5" height="15.0" fill="rgb(210,207,6)" rx="2" ry="2" />
<text  x="1191.50" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul,PageId&amp;&amp;, (1 samples, 0.13%)</title><rect x="721.0" y="229" width="1.5" height="15.0" fill="rgb(239,94,33)" rx="2" ry="2" />
<text  x="724.01" y="239.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (208 samples, 26.50%)</title><rect x="53.6" y="293" width="312.7" height="15.0" fill="rgb(240,108,32)" rx="2" ry="2" />
<text  x="56.59" y="303.5" >__pthread_cond_wait</text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="739.0" y="245" width="1.5" height="15.0" fill="rgb(209,153,50)" rx="2" ry="2" />
<text  x="742.04" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a872597900&quot;, (1 samples, 0.13%)</title><rect x="690.9" y="213" width="1.5" height="15.0" fill="rgb(219,90,46)" rx="2" ry="2" />
<text  x="693.94" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="540.6" y="293" width="15.1" height="15.0" fill="rgb(213,78,42)" rx="2" ry="2" />
<text  x="543.62" y="303.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6fa68fd90, (4 samples, 0.51%)</title><rect x="465.5" y="341" width="6.0" height="15.0" fill="rgb(214,146,18)" rx="2" ry="2" />
<text  x="468.46" y="351.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="488.0" y="325" width="6.0" height="15.0" fill="rgb(219,100,37)" rx="2" ry="2" />
<text  x="491.01" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="854.8" y="277" width="1.5" height="15.0" fill="rgb(219,148,3)" rx="2" ry="2" />
<text  x="857.79" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="689.4" y="181" width="1.5" height="15.0" fill="rgb(218,151,44)" rx="2" ry="2" />
<text  x="692.44" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d1faa080 (1 samples, 0.13%)</title><rect x="836.8" y="197" width="1.5" height="15.0" fill="rgb(233,32,7)" rx="2" ry="2" />
<text  x="839.75" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.25%)</title><rect x="453.4" y="325" width="3.0" height="15.0" fill="rgb(214,119,21)" rx="2" ry="2" />
<text  x="456.44" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="424.9" y="149" width="1.5" height="15.0" fill="rgb(239,35,6)" rx="2" ry="2" />
<text  x="427.88" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6a31751d8) (1 samples, 0.13%)</title><rect x="400.8" y="165" width="1.5" height="15.0" fill="rgb(214,120,12)" rx="2" ry="2" />
<text  x="403.83" y="175.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6c8000020, (1 samples, 0.13%)</title><rect x="857.8" y="213" width="1.5" height="15.0" fill="rgb(229,73,52)" rx="2" ry="2" />
<text  x="860.80" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="28.0" y="277" width="1.5" height="15.0" fill="rgb(230,229,44)" rx="2" ry="2" />
<text  x="31.04" y="287.5" ></text>
</g>
<g >
<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize(this=0x7fffc681d300, (6 samples, 0.76%)</title><rect x="1179.5" y="469" width="9.0" height="15.0" fill="rgb(210,56,47)" rx="2" ry="2" />
<text  x="1182.48" y="479.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="713.5" y="213" width="1.5" height="15.0" fill="rgb(241,223,20)" rx="2" ry="2" />
<text  x="716.49" y="223.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="442.9" y="277" width="1.5" height="15.0" fill="rgb(227,171,17)" rx="2" ry="2" />
<text  x="445.92" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="884.9" y="373" width="1.5" height="15.0" fill="rgb(246,115,42)" rx="2" ry="2" />
<text  x="887.85" y="383.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.25%)</title><rect x="468.5" y="325" width="3.0" height="15.0" fill="rgb(221,143,50)" rx="2" ry="2" />
<text  x="471.47" y="335.5" ></text>
</g>
<g >
<title>Network::getSize(this=0x7fffc681d080) (3 samples, 0.38%)</title><rect x="438.4" y="341" width="4.5" height="15.0" fill="rgb(219,73,34)" rx="2" ry="2" />
<text  x="441.41" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (3 samples, 0.38%)</title><rect x="447.4" y="325" width="4.5" height="15.0" fill="rgb(243,202,13)" rx="2" ry="2" />
<text  x="450.43" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate(this=0x7fffc681cc8f, (2 samples, 0.25%)</title><rect x="869.8" y="341" width="3.0" height="15.0" fill="rgb(224,157,14)" rx="2" ry="2" />
<text  x="872.82" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="693.9" y="181" width="1.6" height="15.0" fill="rgb(208,184,12)" rx="2" ry="2" />
<text  x="696.95" y="191.5" ></text>
</g>
<g >
<title>PageIdHash::operator()(this=0x7fffc681ce68, (1 samples, 0.13%)</title><rect x="35.6" y="277" width="1.5" height="15.0" fill="rgb(234,46,52)" rx="2" ry="2" />
<text  x="38.55" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;PageId*,PageId&gt; (2 samples, 0.25%)</title><rect x="886.4" y="421" width="3.0" height="15.0" fill="rgb(246,24,40)" rx="2" ry="2" />
<text  x="889.36" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (30 samples, 3.82%)</title><rect x="391.8" y="213" width="45.1" height="15.0" fill="rgb(231,29,22)" rx="2" ry="2" />
<text  x="394.81" y="223.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="450.4" y="309" width="1.5" height="15.0" fill="rgb(229,229,14)" rx="2" ry="2" />
<text  x="453.43" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (4 samples, 0.51%)</title><rect x="41.6" y="277" width="6.0" height="15.0" fill="rgb(220,41,28)" rx="2" ry="2" />
<text  x="44.57" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.13%)</title><rect x="464.0" y="325" width="1.5" height="15.0" fill="rgb(245,148,51)" rx="2" ry="2" />
<text  x="466.96" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (8 samples, 1.02%)</title><rect x="641.3" y="277" width="12.1" height="15.0" fill="rgb(210,128,54)" rx="2" ry="2" />
<text  x="644.34" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="31.0" y="277" width="4.6" height="15.0" fill="rgb(211,45,16)" rx="2" ry="2" />
<text  x="34.04" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (7 samples, 0.89%)</title><rect x="712.0" y="293" width="10.5" height="15.0" fill="rgb(237,186,29)" rx="2" ry="2" />
<text  x="714.99" y="303.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;, (571 samples, 72.74%)</title><rect x="10.0" y="453" width="858.3" height="15.0" fill="rgb(206,42,16)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;,</text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="509.1" y="293" width="15.0" height="15.0" fill="rgb(230,65,37)" rx="2" ry="2" />
<text  x="512.06" y="303.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (5 samples, 0.64%)</title><rect x="474.5" y="325" width="7.5" height="15.0" fill="rgb(225,9,16)" rx="2" ry="2" />
<text  x="477.48" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="454.9" y="293" width="1.5" height="15.0" fill="rgb(217,156,27)" rx="2" ry="2" />
<text  x="457.94" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6db2643b0, (1 samples, 0.13%)</title><rect x="743.6" y="261" width="1.5" height="15.0" fill="rgb(237,190,31)" rx="2" ry="2" />
<text  x="746.55" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fffbf140510) (1 samples, 0.13%)</title><rect x="868.3" y="341" width="1.5" height="15.0" fill="rgb(213,158,39)" rx="2" ry="2" />
<text  x="871.32" y="351.5" ></text>
</g>
<g >
<title>main() (213 samples, 27.13%)</title><rect x="868.3" y="501" width="320.2" height="15.0" fill="rgb(237,177,1)" rx="2" ry="2" />
<text  x="871.32" y="511.5" >main()</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="442.9" y="293" width="1.5" height="15.0" fill="rgb(225,211,24)" rx="2" ry="2" />
<text  x="445.92" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,double, (112 samples, 14.27%)</title><rect x="555.7" y="341" width="168.3" height="15.0" fill="rgb(231,37,45)" rx="2" ry="2" />
<text  x="558.66" y="351.5" >std::unordered_map&lt;Pa..</text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6facaa4e8 (1 samples, 0.13%)</title><rect x="710.5" y="261" width="1.5" height="15.0" fill="rgb(222,54,53)" rx="2" ry="2" />
<text  x="713.48" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6dca19990 (1 samples, 0.13%)</title><rect x="693.9" y="197" width="1.6" height="15.0" fill="rgb(247,200,37)" rx="2" ry="2" />
<text  x="696.95" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (10 samples, 1.27%)</title><rect x="509.1" y="309" width="15.0" height="15.0" fill="rgb(228,53,33)" rx="2" ry="2" />
<text  x="512.06" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="669.9" y="229" width="1.5" height="15.0" fill="rgb(225,103,9)" rx="2" ry="2" />
<text  x="672.90" y="239.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6f563fd10, (3 samples, 0.38%)</title><rect x="494.0" y="341" width="4.5" height="15.0" fill="rgb(223,228,23)" rx="2" ry="2" />
<text  x="497.03" y="351.5" ></text>
</g>
<g >
<title>__lll_lock_wait (7 samples, 0.89%)</title><rect x="498.5" y="277" width="10.6" height="15.0" fill="rgb(244,129,28)" rx="2" ry="2" />
<text  x="501.54" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f84fbff0) (1 samples, 0.13%)</title><rect x="1188.5" y="357" width="1.5" height="15.0" fill="rgb(251,189,5)" rx="2" ry="2" />
<text  x="1191.50" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.51%)</title><rect x="29.5" y="293" width="6.1" height="15.0" fill="rgb(219,130,42)" rx="2" ry="2" />
<text  x="32.54" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="411.4" y="149" width="1.5" height="15.0" fill="rgb(252,137,38)" rx="2" ry="2" />
<text  x="414.35" y="159.5" ></text>
</g>
<g >
<title>start_thread(arg=&lt;optimized (571 samples, 72.74%)</title><rect x="10.0" y="485" width="858.3" height="15.0" fill="rgb(210,180,25)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >start_thread(arg=&lt;optimized</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6caff1bb0 (1 samples, 0.13%)</title><rect x="686.4" y="197" width="1.5" height="15.0" fill="rgb(243,54,10)" rx="2" ry="2" />
<text  x="689.43" y="207.5" ></text>
</g>
<g >
<title>std::condition_variable::wait&lt;MultiThreadedPageRankComputer::WorkerData::wait()::{lambda()#1}&gt;(std::unique_lock&lt;std::mutex&gt;&amp;,MultiThreadedPageRankComputer::WorkerData::wait()::{lambda()#1}) (208 samples, 26.50%)</title><rect x="53.6" y="325" width="312.7" height="15.0" fill="rgb(216,211,36)" rx="2" ry="2" />
<text  x="56.59" y="335.5" >std::condition_variable::wait&lt;MultiThreade..</text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (7 samples, 0.89%)</title><rect x="856.3" y="341" width="10.5" height="15.0" fill="rgb(223,173,24)" rx="2" ry="2" />
<text  x="859.29" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="406.8" y="149" width="1.5" height="15.0" fill="rgb(247,183,44)" rx="2" ry="2" />
<text  x="409.84" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;PageId, (1 samples, 0.13%)</title><rect x="1185.5" y="357" width="1.5" height="15.0" fill="rgb(226,161,31)" rx="2" ry="2" />
<text  x="1188.49" y="367.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (11 samples, 1.40%)</title><rect x="524.1" y="309" width="16.5" height="15.0" fill="rgb(227,153,32)" rx="2" ry="2" />
<text  x="527.09" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="453.4" y="309" width="1.5" height="15.0" fill="rgb(253,197,13)" rx="2" ry="2" />
<text  x="456.44" y="319.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="488.0" y="309" width="6.0" height="15.0" fill="rgb(232,5,17)" rx="2" ry="2" />
<text  x="491.01" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="874.3" y="325" width="1.5" height="15.0" fill="rgb(254,125,26)" rx="2" ry="2" />
<text  x="877.33" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.13%)</title><rect x="859.3" y="213" width="1.5" height="15.0" fill="rgb(234,223,54)" rx="2" ry="2" />
<text  x="862.30" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="52.1" y="261" width="1.5" height="15.0" fill="rgb(250,32,49)" rx="2" ry="2" />
<text  x="55.09" y="271.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (5 samples, 0.64%)</title><rect x="474.5" y="309" width="7.5" height="15.0" fill="rgb(252,117,28)" rx="2" ry="2" />
<text  x="477.48" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fe6f0000020) (1 samples, 0.13%)</title><rect x="877.3" y="309" width="1.5" height="15.0" fill="rgb(220,195,41)" rx="2" ry="2" />
<text  x="880.34" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="686.4" y="181" width="1.5" height="15.0" fill="rgb(221,187,2)" rx="2" ry="2" />
<text  x="689.43" y="191.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f5e4fd90, (2 samples, 0.25%)</title><rect x="674.4" y="229" width="3.0" height="15.0" fill="rgb(249,227,22)" rx="2" ry="2" />
<text  x="677.41" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (3 samples, 0.38%)</title><rect x="881.8" y="389" width="4.6" height="15.0" fill="rgb(226,72,37)" rx="2" ry="2" />
<text  x="884.85" y="399.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6fa68fdb0) (1 samples, 0.13%)</title><rect x="445.9" y="325" width="1.5" height="15.0" fill="rgb(246,197,54)" rx="2" ry="2" />
<text  x="448.92" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fe6f0000020) (1 samples, 0.13%)</title><rect x="889.4" y="341" width="1.5" height="15.0" fill="rgb(237,26,25)" rx="2" ry="2" />
<text  x="892.36" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;, (571 samples, 72.74%)</title><rect x="10.0" y="421" width="858.3" height="15.0" fill="rgb(249,85,21)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;,</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (5 samples, 0.64%)</title><rect x="384.3" y="197" width="7.5" height="15.0" fill="rgb(243,191,36)" rx="2" ry="2" />
<text  x="387.29" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (7 samples, 0.89%)</title><rect x="712.0" y="277" width="10.5" height="15.0" fill="rgb(211,4,42)" rx="2" ry="2" />
<text  x="714.99" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (2 samples, 0.25%)</title><rect x="869.8" y="309" width="3.0" height="15.0" fill="rgb(252,210,5)" rx="2" ry="2" />
<text  x="872.82" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.13%)</title><rect x="754.1" y="309" width="1.5" height="15.0" fill="rgb(238,108,22)" rx="2" ry="2" />
<text  x="757.08" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6dbd5c508) (1 samples, 0.13%)</title><rect x="421.9" y="165" width="1.5" height="15.0" fill="rgb(227,60,3)" rx="2" ry="2" />
<text  x="424.87" y="175.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (2 samples, 0.25%)</title><rect x="875.8" y="325" width="3.0" height="15.0" fill="rgb(210,3,11)" rx="2" ry="2" />
<text  x="878.83" y="335.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator()(this=0x7fffc681ce68, (7 samples, 0.89%)</title><rect x="829.2" y="245" width="10.6" height="15.0" fill="rgb(239,168,53)" rx="2" ry="2" />
<text  x="832.24" y="255.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.25%)</title><rect x="456.4" y="309" width="3.1" height="15.0" fill="rgb(254,215,1)" rx="2" ry="2" />
<text  x="459.45" y="319.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="880.3" y="325" width="1.5" height="15.0" fill="rgb(237,209,4)" rx="2" ry="2" />
<text  x="883.34" y="335.5" ></text>
</g>
<g >
<title>clone() (571 samples, 72.74%)</title><rect x="10.0" y="501" width="858.3" height="15.0" fill="rgb(222,15,14)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >clone()</text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (3 samples, 0.38%)</title><rect x="886.4" y="437" width="4.5" height="15.0" fill="rgb(254,71,20)" rx="2" ry="2" />
<text  x="889.36" y="447.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6be9f1d28, (1 samples, 0.13%)</title><rect x="435.4" y="165" width="1.5" height="15.0" fill="rgb(242,73,47)" rx="2" ry="2" />
<text  x="438.40" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.13%)</title><rect x="727.0" y="309" width="1.5" height="15.0" fill="rgb(251,197,41)" rx="2" ry="2" />
<text  x="730.02" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6bcc92be8) (1 samples, 0.13%)</title><rect x="405.3" y="165" width="1.5" height="15.0" fill="rgb(218,215,39)" rx="2" ry="2" />
<text  x="408.34" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId,true&gt; (1 samples, 0.13%)</title><rect x="884.9" y="341" width="1.5" height="15.0" fill="rgb(217,62,51)" rx="2" ry="2" />
<text  x="887.85" y="351.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f5e4fc80, (1 samples, 0.13%)</title><rect x="25.0" y="213" width="1.5" height="15.0" fill="rgb(229,32,4)" rx="2" ry="2" />
<text  x="28.03" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="878.8" y="389" width="1.5" height="15.0" fill="rgb(216,40,53)" rx="2" ry="2" />
<text  x="881.84" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator()(this=0x7fffc681cdf8, (1 samples, 0.13%)</title><rect x="651.9" y="245" width="1.5" height="15.0" fill="rgb(208,63,54)" rx="2" ry="2" />
<text  x="654.86" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId,PageId&gt; (1 samples, 0.13%)</title><rect x="866.8" y="293" width="1.5" height="15.0" fill="rgb(247,155,12)" rx="2" ry="2" />
<text  x="869.82" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="429.4" y="149" width="1.5" height="15.0" fill="rgb(236,17,47)" rx="2" ry="2" />
<text  x="432.39" y="159.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d9e2edc8) (1 samples, 0.13%)</title><rect x="415.9" y="165" width="1.5" height="15.0" fill="rgb(253,171,21)" rx="2" ry="2" />
<text  x="418.86" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="405.3" y="149" width="1.5" height="15.0" fill="rgb(221,20,31)" rx="2" ry="2" />
<text  x="408.34" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId,std::pair&lt;PageId (27 samples, 3.44%)</title><rect x="656.4" y="277" width="40.6" height="15.0" fill="rgb(238,155,52)" rx="2" ry="2" />
<text  x="659.37" y="287.5" >std..</text>
</g>
<g >
<title>std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="366.3" y="325" width="1.5" height="15.0" fill="rgb(205,112,49)" rx="2" ry="2" />
<text  x="369.25" y="335.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="388.8" y="117" width="1.5" height="15.0" fill="rgb(235,100,50)" rx="2" ry="2" />
<text  x="391.80" y="127.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6c0000020, (1 samples, 0.13%)</title><rect x="47.6" y="181" width="1.5" height="15.0" fill="rgb(241,49,12)" rx="2" ry="2" />
<text  x="50.58" y="191.5" ></text>
</g>
<g >
<title>operatornew(unsigned (2 samples, 0.25%)</title><rect x="713.5" y="261" width="3.0" height="15.0" fill="rgb(250,47,16)" rx="2" ry="2" />
<text  x="716.49" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d9e725c8) (1 samples, 0.13%)</title><rect x="417.4" y="165" width="1.5" height="15.0" fill="rgb(206,83,50)" rx="2" ry="2" />
<text  x="420.36" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="394.8" y="149" width="1.5" height="15.0" fill="rgb(231,63,36)" rx="2" ry="2" />
<text  x="397.82" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page,Page (3 samples, 0.38%)</title><rect x="1182.5" y="405" width="4.5" height="15.0" fill="rgb(224,44,28)" rx="2" ry="2" />
<text  x="1185.48" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="16.0" y="261" width="1.5" height="15.0" fill="rgb(250,2,24)" rx="2" ry="2" />
<text  x="19.01" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (4 samples, 0.51%)</title><rect x="880.3" y="421" width="6.1" height="15.0" fill="rgb(223,124,46)" rx="2" ry="2" />
<text  x="883.34" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="22.0" y="261" width="4.5" height="15.0" fill="rgb(247,9,28)" rx="2" ry="2" />
<text  x="25.03" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock(mutex=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="488.0" y="293" width="6.0" height="15.0" fill="rgb(254,48,43)" rx="2" ry="2" />
<text  x="491.01" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="869.8" y="405" width="4.5" height="15.0" fill="rgb(246,100,13)" rx="2" ry="2" />
<text  x="872.82" y="415.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="52.1" y="277" width="1.5" height="15.0" fill="rgb(229,79,20)" rx="2" ry="2" />
<text  x="55.09" y="287.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="860.8" y="229" width="1.5" height="15.0" fill="rgb(222,216,6)" rx="2" ry="2" />
<text  x="863.80" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (5 samples, 0.64%)</title><rect x="859.3" y="325" width="7.5" height="15.0" fill="rgb(249,218,49)" rx="2" ry="2" />
<text  x="862.30" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="707.5" y="245" width="1.5" height="15.0" fill="rgb(253,193,35)" rx="2" ry="2" />
<text  x="710.48" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (7 samples, 0.89%)</title><rect x="17.5" y="293" width="10.5" height="15.0" fill="rgb(212,177,27)" rx="2" ry="2" />
<text  x="20.52" y="303.5" ></text>
</g>
<g >
<title>checked_request2size(sz=&lt;synthetic (1 samples, 0.13%)</title><rect x="52.1" y="245" width="1.5" height="15.0" fill="rgb(249,93,10)" rx="2" ry="2" />
<text  x="55.09" y="255.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="384.3" y="85" width="1.5" height="15.0" fill="rgb(218,192,43)" rx="2" ry="2" />
<text  x="387.29" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;PageId,PageId, (1 samples, 0.13%)</title><rect x="49.1" y="293" width="1.5" height="15.0" fill="rgb(233,79,31)" rx="2" ry="2" />
<text  x="52.08" y="303.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="14.5" y="197" width="1.5" height="15.0" fill="rgb(226,148,36)" rx="2" ry="2" />
<text  x="17.51" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (8 samples, 1.02%)</title><rect x="29.5" y="325" width="12.1" height="15.0" fill="rgb(208,85,13)" rx="2" ry="2" />
<text  x="32.54" y="335.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="384.3" y="117" width="1.5" height="15.0" fill="rgb(224,55,34)" rx="2" ry="2" />
<text  x="387.29" y="127.5" ></text>
</g>
<g >
<title>__vfprintf_internal(s=s@entry=0x7fffc681cb90, (1 samples, 0.13%)</title><rect x="1187.0" y="389" width="1.5" height="15.0" fill="rgb(212,62,19)" rx="2" ry="2" />
<text  x="1189.99" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (3 samples, 0.38%)</title><rect x="803.7" y="277" width="4.5" height="15.0" fill="rgb(240,81,12)" rx="2" ry="2" />
<text  x="806.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.13%)</title><rect x="654.9" y="277" width="1.5" height="15.0" fill="rgb(237,43,47)" rx="2" ry="2" />
<text  x="657.87" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt;(__first=0x7fe6cab9c4d0, (1 samples, 0.13%)</title><rect x="887.9" y="389" width="1.5" height="15.0" fill="rgb(254,14,0)" rx="2" ry="2" />
<text  x="890.86" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (36 samples, 4.59%)</title><rect x="382.8" y="277" width="54.1" height="15.0" fill="rgb(238,47,9)" rx="2" ry="2" />
<text  x="385.79" y="287.5" >std::..</text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6f6e6fd90, (1 samples, 0.13%)</title><rect x="464.0" y="341" width="1.5" height="15.0" fill="rgb(226,88,22)" rx="2" ry="2" />
<text  x="466.96" y="351.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f665fd90) (3 samples, 0.38%)</title><rect x="447.4" y="341" width="4.5" height="15.0" fill="rgb(219,191,50)" rx="2" ry="2" />
<text  x="450.43" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="868.3" y="325" width="1.5" height="15.0" fill="rgb(218,92,46)" rx="2" ry="2" />
<text  x="871.32" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId,std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="749.6" y="293" width="1.5" height="15.0" fill="rgb(241,202,34)" rx="2" ry="2" />
<text  x="752.57" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt;(__ptr=0x7fe6add78ce0 (1 samples, 0.13%)</title><rect x="868.3" y="309" width="1.5" height="15.0" fill="rgb(247,55,53)" rx="2" ry="2" />
<text  x="871.32" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="412.9" y="149" width="1.5" height="15.0" fill="rgb(214,114,38)" rx="2" ry="2" />
<text  x="415.85" y="159.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6c9377d60, (1 samples, 0.13%)</title><rect x="886.4" y="357" width="1.5" height="15.0" fill="rgb(210,205,8)" rx="2" ry="2" />
<text  x="889.36" y="367.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6f4e2fd10, (4 samples, 0.51%)</title><rect x="488.0" y="341" width="6.0" height="15.0" fill="rgb(233,142,37)" rx="2" ry="2" />
<text  x="491.01" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="746.6" y="245" width="1.5" height="15.0" fill="rgb(235,138,43)" rx="2" ry="2" />
<text  x="749.56" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (1 samples, 0.13%)</title><rect x="40.1" y="229" width="1.5" height="15.0" fill="rgb(236,195,24)" rx="2" ry="2" />
<text  x="43.06" y="239.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;, (571 samples, 72.74%)</title><rect x="10.0" y="373" width="858.3" height="15.0" fill="rgb(245,148,28)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;,</text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d00369e0) (1 samples, 0.13%)</title><rect x="865.3" y="181" width="1.5" height="15.0" fill="rgb(206,206,31)" rx="2" ry="2" />
<text  x="868.31" y="191.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6c0000020, (1 samples, 0.13%)</title><rect x="16.0" y="245" width="1.5" height="15.0" fill="rgb(208,153,9)" rx="2" ry="2" />
<text  x="19.01" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="722.5" y="309" width="1.5" height="15.0" fill="rgb(225,194,13)" rx="2" ry="2" />
<text  x="725.51" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (6 samples, 0.76%)</title><rect x="17.5" y="277" width="9.0" height="15.0" fill="rgb(246,129,5)" rx="2" ry="2" />
<text  x="20.52" y="287.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="385.8" y="117" width="1.5" height="15.0" fill="rgb(207,156,17)" rx="2" ry="2" />
<text  x="388.80" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="866.8" y="325" width="1.5" height="15.0" fill="rgb(220,217,26)" rx="2" ry="2" />
<text  x="869.82" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::construct&lt;Page, (1 samples, 0.13%)</title><rect x="857.8" y="325" width="1.5" height="15.0" fill="rgb(217,169,15)" rx="2" ry="2" />
<text  x="860.80" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725338569&quot;, (1 samples, 0.13%)</title><rect x="677.4" y="213" width="1.5" height="15.0" fill="rgb(246,200,46)" rx="2" ry="2" />
<text  x="680.41" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (1 samples, 0.13%)</title><rect x="29.5" y="277" width="1.5" height="15.0" fill="rgb(221,200,2)" rx="2" ry="2" />
<text  x="32.54" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul,PageId (2 samples, 0.25%)</title><rect x="826.2" y="229" width="3.0" height="15.0" fill="rgb(238,16,52)" rx="2" ry="2" />
<text  x="829.23" y="239.5" ></text>
</g>
<g >
<title>malloc_consolidate(av=av@entry=0x7fe6f0000020) (1 samples, 0.13%)</title><rect x="880.3" y="309" width="1.5" height="15.0" fill="rgb(238,176,9)" rx="2" ry="2" />
<text  x="883.34" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Insert&lt;PageId,PageId, (6 samples, 0.76%)</title><rect x="41.6" y="309" width="9.0" height="15.0" fill="rgb(223,99,47)" rx="2" ry="2" />
<text  x="44.57" y="319.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6dc4f2418) (1 samples, 0.13%)</title><rect x="424.9" y="165" width="1.5" height="15.0" fill="rgb(236,185,5)" rx="2" ry="2" />
<text  x="427.88" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (3 samples, 0.38%)</title><rect x="874.3" y="373" width="4.5" height="15.0" fill="rgb(237,131,22)" rx="2" ry="2" />
<text  x="877.33" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId,std::pair&lt;PageId (2 samples, 0.25%)</title><rect x="650.4" y="261" width="3.0" height="15.0" fill="rgb(215,91,6)" rx="2" ry="2" />
<text  x="653.36" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="448.9" y="309" width="1.5" height="15.0" fill="rgb(207,115,3)" rx="2" ry="2" />
<text  x="451.93" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.13%)</title><rect x="731.5" y="293" width="1.5" height="15.0" fill="rgb(214,209,7)" rx="2" ry="2" />
<text  x="734.53" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=1536) (3 samples, 0.38%)</title><rect x="860.8" y="245" width="4.5" height="15.0" fill="rgb(215,177,7)" rx="2" ry="2" />
<text  x="863.80" y="255.5" ></text>
</g>
<g >
<title>__lll_lock_wait (11 samples, 1.40%)</title><rect x="524.1" y="277" width="16.5" height="15.0" fill="rgb(231,113,34)" rx="2" ry="2" />
<text  x="527.09" y="287.5" ></text>
</g>
<g >
<title>MultiThreadedPageRankComputer::WorkerData::initRestSequential(this=0x7fffc681cde0, (25 samples, 3.18%)</title><rect x="13.0" y="341" width="37.6" height="15.0" fill="rgb(242,226,13)" rx="2" ry="2" />
<text  x="16.01" y="351.5" >Mul..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="432.4" y="149" width="1.5" height="15.0" fill="rgb(251,21,42)" rx="2" ry="2" />
<text  x="435.39" y="159.5" ></text>
</g>
<g >
<title>__lll_lock_wait (10 samples, 1.27%)</title><rect x="509.1" y="277" width="15.0" height="15.0" fill="rgb(217,28,18)" rx="2" ry="2" />
<text  x="512.06" y="287.5" ></text>
</g>
<g >
<title>Page::Page(this=0x7fffc003ae10) (1 samples, 0.13%)</title><rect x="1184.0" y="389" width="1.5" height="15.0" fill="rgb(239,82,48)" rx="2" ry="2" />
<text  x="1186.99" y="399.5" ></text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="715.0" y="181" width="1.5" height="15.0" fill="rgb(254,14,54)" rx="2" ry="2" />
<text  x="717.99" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="385.8" y="101" width="1.5" height="15.0" fill="rgb(205,59,38)" rx="2" ry="2" />
<text  x="388.80" y="111.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="833.7" y="181" width="1.5" height="15.0" fill="rgb(243,187,8)" rx="2" ry="2" />
<text  x="836.75" y="191.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="385.8" y="69" width="1.5" height="15.0" fill="rgb(229,147,39)" rx="2" ry="2" />
<text  x="388.80" y="79.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock(__mutex=0x7fffc681cf68) (7 samples, 0.89%)</title><rect x="498.5" y="309" width="10.6" height="15.0" fill="rgb(206,44,31)" rx="2" ry="2" />
<text  x="501.54" y="319.5" ></text>
</g>
<g >
<title>PageIdHash::operator()(this=0x7fffc681cdf8, (4 samples, 0.51%)</title><rect x="703.0" y="293" width="6.0" height="15.0" fill="rgb(221,55,36)" rx="2" ry="2" />
<text  x="705.97" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;2, (1 samples, 0.13%)</title><rect x="841.3" y="261" width="1.5" height="15.0" fill="rgb(227,67,35)" rx="2" ry="2" />
<text  x="844.26" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (4 samples, 0.51%)</title><rect x="456.4" y="325" width="6.1" height="15.0" fill="rgb(227,148,35)" rx="2" ry="2" />
<text  x="459.45" y="335.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6941a8ce8) (1 samples, 0.13%)</title><rect x="394.8" y="165" width="1.5" height="15.0" fill="rgb(250,143,28)" rx="2" ry="2" />
<text  x="397.82" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId, (2 samples, 0.25%)</title><rect x="32.5" y="261" width="3.1" height="15.0" fill="rgb(242,78,21)" rx="2" ry="2" />
<text  x="35.55" y="271.5" ></text>
</g>
<g >
<title>operatornew(unsigned (3 samples, 0.38%)</title><rect x="860.8" y="261" width="4.5" height="15.0" fill="rgb(241,90,41)" rx="2" ry="2" />
<text  x="863.80" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="393.3" y="197" width="1.5" height="15.0" fill="rgb(248,67,47)" rx="2" ry="2" />
<text  x="396.31" y="207.5" ></text>
</g>
<g >
<title>Page::getId(this=0x7fe6f88398b0) (1 samples, 0.13%)</title><rect x="16.0" y="325" width="1.5" height="15.0" fill="rgb(227,198,31)" rx="2" ry="2" />
<text  x="19.01" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (5 samples, 0.64%)</title><rect x="384.3" y="213" width="7.5" height="15.0" fill="rgb(235,25,51)" rx="2" ry="2" />
<text  x="387.29" y="223.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6bd95d7a8) (1 samples, 0.13%)</title><rect x="406.8" y="165" width="1.5" height="15.0" fill="rgb(214,193,47)" rx="2" ry="2" />
<text  x="409.84" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6f0214240, (1 samples, 0.13%)</title><rect x="746.6" y="261" width="1.5" height="15.0" fill="rgb(225,205,37)" rx="2" ry="2" />
<text  x="749.56" y="271.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="445.9" y="245" width="1.5" height="15.0" fill="rgb(244,23,34)" rx="2" ry="2" />
<text  x="448.92" y="255.5" ></text>
</g>
<g >
<title>unlink_chunk(p=p@entry=0x7fe6e65ed330, (1 samples, 0.13%)</title><rect x="880.3" y="293" width="1.5" height="15.0" fill="rgb(211,202,3)" rx="2" ry="2" />
<text  x="883.34" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="1188.5" y="341" width="1.5" height="15.0" fill="rgb(247,148,18)" rx="2" ry="2" />
<text  x="1191.50" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="674.4" y="181" width="1.5" height="15.0" fill="rgb(221,185,13)" rx="2" ry="2" />
<text  x="677.41" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes(voidconst*, (1 samples, 0.13%)</title><rect x="847.3" y="245" width="1.5" height="15.0" fill="rgb(213,75,22)" rx="2" ry="2" />
<text  x="850.27" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (28 samples, 3.57%)</title><rect x="394.8" y="197" width="42.1" height="15.0" fill="rgb(253,204,19)" rx="2" ry="2" />
<text  x="397.82" y="207.5" >__g..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="414.4" y="149" width="1.5" height="15.0" fill="rgb(230,184,49)" rx="2" ry="2" />
<text  x="417.36" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="421.9" y="133" width="1.5" height="15.0" fill="rgb(217,223,21)" rx="2" ry="2" />
<text  x="424.87" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (7 samples, 0.89%)</title><rect x="712.0" y="309" width="10.5" height="15.0" fill="rgb(226,214,49)" rx="2" ry="2" />
<text  x="714.99" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="1182.5" y="373" width="1.5" height="15.0" fill="rgb(247,175,54)" rx="2" ry="2" />
<text  x="1185.48" y="383.5" ></text>
</g>
<g >
<title>std::__invoke&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;, (571 samples, 72.74%)</title><rect x="10.0" y="405" width="858.3" height="15.0" fill="rgb(230,10,34)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >std::__invoke&lt;MultiThreadedPageRankComputer::computeForNetwork(Networkconst&amp;,</text>
</g>
<g >
<title>mprotect() (1 samples, 0.13%)</title><rect x="863.8" y="181" width="1.5" height="15.0" fill="rgb(240,48,14)" rx="2" ry="2" />
<text  x="866.81" y="191.5" ></text>
</g>
<g >
<title>std::equal_to&lt;PageId&gt;::operator()(this=0x7fffc681ce30, (8 samples, 1.02%)</title><rect x="684.9" y="245" width="12.1" height="15.0" fill="rgb(245,12,36)" rx="2" ry="2" />
<text  x="687.93" y="255.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d984c978) (1 samples, 0.13%)</title><rect x="412.9" y="165" width="1.5" height="15.0" fill="rgb(241,117,0)" rx="2" ry="2" />
<text  x="415.85" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="397.8" y="149" width="1.5" height="15.0" fill="rgb(235,168,38)" rx="2" ry="2" />
<text  x="400.82" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;PageId,unsigned (70 samples, 8.92%)</title><rect x="751.1" y="341" width="105.2" height="15.0" fill="rgb(247,75,11)" rx="2" ry="2" />
<text  x="754.07" y="351.5" >std::unorder..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.25%)</title><rect x="22.0" y="245" width="3.0" height="15.0" fill="rgb(234,71,18)" rx="2" ry="2" />
<text  x="25.03" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6db2643b0 (1 samples, 0.13%)</title><rect x="835.2" y="197" width="1.6" height="15.0" fill="rgb(208,84,18)" rx="2" ry="2" />
<text  x="838.25" y="207.5" ></text>
</g>
<g >
<title>Page::getId(this=0x7fe6ec882a90) (1 samples, 0.13%)</title><rect x="445.9" y="341" width="1.5" height="15.0" fill="rgb(226,130,8)" rx="2" ry="2" />
<text  x="448.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="402.3" y="149" width="1.5" height="15.0" fill="rgb(244,33,15)" rx="2" ry="2" />
<text  x="405.33" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; (1 samples, 0.13%)</title><rect x="716.5" y="261" width="1.5" height="15.0" fill="rgb(238,138,17)" rx="2" ry="2" />
<text  x="719.50" y="271.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe694898f88) (1 samples, 0.13%)</title><rect x="385.8" y="149" width="1.5" height="15.0" fill="rgb(205,140,42)" rx="2" ry="2" />
<text  x="388.80" y="159.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6d0000020, (1 samples, 0.13%)</title><rect x="713.5" y="229" width="1.5" height="15.0" fill="rgb(211,215,41)" rx="2" ry="2" />
<text  x="716.49" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725169877&quot;, (1 samples, 0.13%)</title><rect x="680.4" y="213" width="1.5" height="15.0" fill="rgb(234,85,49)" rx="2" ry="2" />
<text  x="683.42" y="223.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (11 samples, 1.40%)</title><rect x="524.1" y="325" width="16.5" height="15.0" fill="rgb(232,157,28)" rx="2" ry="2" />
<text  x="527.09" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6d4da01a0 (1 samples, 0.13%)</title><rect x="832.2" y="197" width="1.5" height="15.0" fill="rgb(247,219,39)" rx="2" ry="2" />
<text  x="835.24" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (1 samples, 0.13%)</title><rect x="384.3" y="149" width="1.5" height="15.0" fill="rgb(243,109,48)" rx="2" ry="2" />
<text  x="387.29" y="159.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="384.3" y="101" width="1.5" height="15.0" fill="rgb(209,31,45)" rx="2" ry="2" />
<text  x="387.29" y="111.5" ></text>
</g>
<g >
<title>SimpleIdGenerator::generateId(this=0x7fffc681d340, (1 samples, 0.13%)</title><rect x="442.9" y="325" width="1.5" height="15.0" fill="rgb(219,61,42)" rx="2" ry="2" />
<text  x="445.92" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=1536) (1 samples, 0.13%)</title><rect x="859.3" y="245" width="1.5" height="15.0" fill="rgb(216,137,10)" rx="2" ry="2" />
<text  x="862.30" y="255.5" ></text>
</g>
<g >
<title>PageId::operator==(this=0x7fe6f6e6fd90, (2 samples, 0.25%)</title><rect x="677.4" y="229" width="3.0" height="15.0" fill="rgb(242,37,21)" rx="2" ry="2" />
<text  x="680.41" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare(__s1=0x7fe6db2643b0 (1 samples, 0.13%)</title><rect x="692.4" y="197" width="1.5" height="15.0" fill="rgb(240,62,39)" rx="2" ry="2" />
<text  x="695.45" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::deallocate (1 samples, 0.13%)</title><rect x="856.3" y="293" width="1.5" height="15.0" fill="rgb(214,203,37)" rx="2" ry="2" />
<text  x="859.29" y="303.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="889.4" y="357" width="1.5" height="15.0" fill="rgb(207,97,5)" rx="2" ry="2" />
<text  x="892.36" y="367.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6f6e6fd90) (3 samples, 0.38%)</title><rect x="451.9" y="341" width="4.5" height="15.0" fill="rgb(237,36,25)" rx="2" ry="2" />
<text  x="454.94" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;PageIdAndRank,std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.13%)</title><rect x="868.3" y="437" width="1.5" height="15.0" fill="rgb(218,36,40)" rx="2" ry="2" />
<text  x="871.32" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (4 samples, 0.51%)</title><rect x="728.5" y="309" width="6.0" height="15.0" fill="rgb(253,182,53)" rx="2" ry="2" />
<text  x="731.52" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="420.4" y="149" width="1.5" height="15.0" fill="rgb(212,180,51)" rx="2" ry="2" />
<text  x="423.37" y="159.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt;(__first=0x7fe6f162b460 (1 samples, 0.13%)</title><rect x="459.5" y="309" width="1.5" height="15.0" fill="rgb(239,212,32)" rx="2" ry="2" />
<text  x="462.45" y="319.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.13%)</title><rect x="14.5" y="229" width="1.5" height="15.0" fill="rgb(252,208,33)" rx="2" ry="2" />
<text  x="17.51" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="865.3" y="261" width="1.5" height="15.0" fill="rgb(246,119,5)" rx="2" ry="2" />
<text  x="868.31" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="872.8" y="341" width="1.5" height="15.0" fill="rgb(242,52,16)" rx="2" ry="2" />
<text  x="875.83" y="351.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;PageId,PageIdHash, (6 samples, 0.76%)</title><rect x="41.6" y="325" width="9.0" height="15.0" fill="rgb(241,101,7)" rx="2" ry="2" />
<text  x="44.57" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="40.1" y="261" width="1.5" height="15.0" fill="rgb(213,121,1)" rx="2" ry="2" />
<text  x="43.06" y="271.5" ></text>
</g>
<g >
<title>grow_heap(diff=4096, (1 samples, 0.13%)</title><rect x="863.8" y="197" width="1.5" height="15.0" fill="rgb(247,56,25)" rx="2" ry="2" />
<text  x="866.81" y="207.5" ></text>
</g>
<g >
<title>operatornew(unsigned (1 samples, 0.13%)</title><rect x="384.3" y="165" width="1.5" height="15.0" fill="rgb(241,125,12)" rx="2" ry="2" />
<text  x="387.29" y="175.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (4 samples, 0.51%)</title><rect x="482.0" y="325" width="6.0" height="15.0" fill="rgb(228,112,45)" rx="2" ry="2" />
<text  x="485.00" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="687.9" y="181" width="1.5" height="15.0" fill="rgb(236,213,18)" rx="2" ry="2" />
<text  x="690.94" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (1 samples, 0.13%)</title><rect x="1188.5" y="501" width="1.5" height="15.0" fill="rgb(244,27,38)" rx="2" ry="2" />
<text  x="1191.50" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Page&gt;&gt;::allocate (4 samples, 0.51%)</title><rect x="859.3" y="293" width="6.0" height="15.0" fill="rgb(222,169,25)" rx="2" ry="2" />
<text  x="862.30" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=56) (2 samples, 0.25%)</title><rect x="713.5" y="245" width="3.0" height="15.0" fill="rgb(219,181,15)" rx="2" ry="2" />
<text  x="716.49" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page,Page (1 samples, 0.13%)</title><rect x="865.3" y="293" width="1.5" height="15.0" fill="rgb(235,118,23)" rx="2" ry="2" />
<text  x="868.31" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,std::pair&lt;PageId (2 samples, 0.25%)</title><rect x="869.8" y="389" width="3.0" height="15.0" fill="rgb(230,19,4)" rx="2" ry="2" />
<text  x="872.82" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;PageId,std::allocator&lt;PageId&gt; (1 samples, 0.13%)</title><rect x="866.8" y="341" width="1.5" height="15.0" fill="rgb(233,107,10)" rx="2" ry="2" />
<text  x="869.82" y="351.5" ></text>
</g>
<g >
<title>Page::generateId(this=0x7fe6f7b13970, (1 samples, 0.13%)</title><rect x="442.9" y="341" width="1.5" height="15.0" fill="rgb(238,149,45)" rx="2" ry="2" />
<text  x="445.92" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;Page,std::allocator&lt;Page&gt; (4 samples, 0.51%)</title><rect x="1181.0" y="437" width="6.0" height="15.0" fill="rgb(208,95,12)" rx="2" ry="2" />
<text  x="1183.98" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageIdAndRankconst*, (1 samples, 0.13%)</title><rect x="868.3" y="405" width="1.5" height="15.0" fill="rgb(223,126,37)" rx="2" ry="2" />
<text  x="871.32" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="456.4" y="293" width="3.1" height="15.0" fill="rgb(219,99,19)" rx="2" ry="2" />
<text  x="459.45" y="303.5" ></text>
</g>
<g >
<title>_int_malloc(av=av@entry=0x7fe6f0000020, (1 samples, 0.13%)</title><rect x="388.8" y="85" width="1.5" height="15.0" fill="rgb(227,87,54)" rx="2" ry="2" />
<text  x="391.80" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string(__val=141617) (1 samples, 0.13%)</title><rect x="1187.0" y="437" width="1.5" height="15.0" fill="rgb(253,79,43)" rx="2" ry="2" />
<text  x="1189.99" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void,MultiThreadedPageRankComputer::computeForNetwork(Network (571 samples, 72.74%)</title><rect x="10.0" y="389" width="858.3" height="15.0" fill="rgb(221,51,49)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >std::__invoke_impl&lt;void,MultiThreadedPageRankComputer::computeForNetwork(Network</text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d86e65a8) (1 samples, 0.13%)</title><rect x="387.3" y="149" width="1.5" height="15.0" fill="rgb(208,22,3)" rx="2" ry="2" />
<text  x="390.30" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (1 samples, 0.13%)</title><rect x="444.4" y="309" width="1.5" height="15.0" fill="rgb(241,195,18)" rx="2" ry="2" />
<text  x="447.42" y="319.5" ></text>
</g>
<g >
<title>std::abs(__x=2.0084224858458126e-11) (1 samples, 0.13%)</title><rect x="473.0" y="341" width="1.5" height="15.0" fill="rgb(231,12,22)" rx="2" ry="2" />
<text  x="475.98" y="351.5" ></text>
</g>
<g >
<title>_int_free(av=0x7fe6f0000020, (2 samples, 0.25%)</title><rect x="869.8" y="325" width="3.0" height="15.0" fill="rgb(228,1,51)" rx="2" ry="2" />
<text  x="872.82" y="335.5" ></text>
</g>
<g >
<title>PageId::~PageId(this=0x7fe6cab9c4d0, (1 samples, 0.13%)</title><rect x="887.9" y="357" width="1.5" height="15.0" fill="rgb(236,129,11)" rx="2" ry="2" />
<text  x="890.86" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="400.8" y="133" width="1.5" height="15.0" fill="rgb(221,82,11)" rx="2" ry="2" />
<text  x="403.83" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;PageId, (2 samples, 0.25%)</title><rect x="881.8" y="373" width="3.1" height="15.0" fill="rgb(246,158,24)" rx="2" ry="2" />
<text  x="884.85" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageIdconst, (1 samples, 0.13%)</title><rect x="872.8" y="373" width="1.5" height="15.0" fill="rgb(207,164,18)" rx="2" ry="2" />
<text  x="875.83" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;PageId,PageId, (4 samples, 0.51%)</title><rect x="41.6" y="261" width="6.0" height="15.0" fill="rgb(214,186,25)" rx="2" ry="2" />
<text  x="44.57" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.13%)</title><rect x="653.4" y="277" width="1.5" height="15.0" fill="rgb(233,138,10)" rx="2" ry="2" />
<text  x="656.36" y="287.5" ></text>
</g>
<g >
<title>PageId::PageId(this=0x7fe6d934cc08) (1 samples, 0.13%)</title><rect x="411.4" y="165" width="1.5" height="15.0" fill="rgb(249,113,4)" rx="2" ry="2" />
<text  x="414.35" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (2 samples, 0.25%)</title><rect x="50.6" y="293" width="3.0" height="15.0" fill="rgb(225,227,3)" rx="2" ry="2" />
<text  x="53.59" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, (6 samples, 0.76%)</title><rect x="739.0" y="277" width="9.1" height="15.0" fill="rgb(231,152,47)" rx="2" ry="2" />
<text  x="742.04" y="287.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(this=0x7fe6d7fefd10, (4 samples, 0.51%)</title><rect x="482.0" y="341" width="6.0" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" />
<text  x="485.00" y="351.5" ></text>
</g>
<g >
<title>std::mutex::lock(this=0x7fffc681cf68) (7 samples, 0.89%)</title><rect x="498.5" y="325" width="10.6" height="15.0" fill="rgb(207,93,14)" rx="2" ry="2" />
<text  x="501.54" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt;(__lhs=&quot;2000f1ffa5ce95d0f1e1893598e6aeeb2c214c85a88e3569d62c2dccd06a8725257487&quot;, (1 samples, 0.13%)</title><rect x="687.9" y="213" width="1.5" height="15.0" fill="rgb(210,79,20)" rx="2" ry="2" />
<text  x="690.94" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc(bytes=71) (1 samples, 0.13%)</title><rect x="445.9" y="277" width="1.5" height="15.0" fill="rgb(242,83,14)" rx="2" ry="2" />
<text  x="448.92" y="287.5" ></text>
</g>
<g >
<title>tcache_get(tc_idx=&lt;optimized (1 samples, 0.13%)</title><rect x="457.9" y="277" width="1.6" height="15.0" fill="rgb(249,18,17)" rx="2" ry="2" />
<text  x="460.95" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash(__ptr=0x7fe6a929e2b0, (1 samples, 0.13%)</title><rect x="709.0" y="261" width="1.5" height="15.0" fill="rgb(239,11,23)" rx="2" ry="2" />
<text  x="711.98" y="271.5" ></text>
</g>
</g>
</svg>
